{"version":3,"sources":["designer.module.js","designer.routes.js","controllers/main-view.controller.js","controllers/tracker-content-container-controller.js","controllers/dialogs/batch-for-qc-dialog.controller.js","controllers/dialogs/batch-for-qc-revised-dialog.controller.js","controllers/dialogs/batch-revise-task-dialog.controller.js","controllers/dialogs/batch-start-task-dialog.controller.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvhjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"designer.js","sourcesContent":["var designerModule = angular.module('designer', ['sharedModule']);","designerModule\r\n\t.config(['$stateProvider', function($stateProvider){\r\n\t\t$stateProvider\r\n\t\t\t.state('main', {\r\n\t\t\t\turl: '/',\r\n\t\t\t\tviews: {\r\n\t\t\t\t\t'': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/shared/views/main.view.html',\r\n\t\t\t\t\t\tcontroller: 'mainViewController',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'content-container@main': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/shared/views/content-container.view.html',\r\n\t\t\t\t\t\tcontroller: 'sharedDashboardContentContainerController',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'toolbar@main': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/shared/templates/toolbar.template.html',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'left-sidenav@main': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/shared/templates/sidenavs/main-left-sidenav.template.html',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'subheader@main': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/shared/templates/subheaders/dashboard-subheader.template.html',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'content@main':{\r\n\t\t\t\t\t\ttemplateUrl: '/app/shared/templates/content/dashboard-content.template.html',\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.state('main.tracker', {\r\n\t\t\t\turl: 'tracker',\r\n\t\t\t\tviews: {\r\n\t\t\t\t\t'content-container':{\r\n\t\t\t\t\t\ttemplateUrl: '/app/shared/views/content-container.view.html',\r\n\t\t\t\t\t\tcontroller: 'trackerContentContainerController',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'toolbar@main.tracker': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/shared/templates/toolbar.template.html',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'left-sidenav@main.tracker': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/shared/templates/sidenavs/main-left-sidenav.template.html',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'subheader@main.tracker': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/shared/templates/subheaders/tracker-subheader.template.html',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'content@main.tracker':{\r\n\t\t\t\t\t\ttemplateUrl: '/app/shared/templates/content/tracker-content.template.html',\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.state('main.notifications', {\r\n\t\t\t\turl: 'notifications',\r\n\t\t\t\tviews: {\r\n\t\t\t\t\t'content-container':{\r\n\t\t\t\t\t\ttemplateUrl: '/app/shared/views/content-container.view.html',\r\n\t\t\t\t\t\tcontroller: 'sharedNotificationsContentContainerController',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'toolbar@main.notifications': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/shared/templates/toolbar.template.html',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'left-sidenav@main.notifications': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/shared/templates/sidenavs/main-left-sidenav.template.html',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'content@main.notifications':{\r\n\t\t\t\t\t\ttemplateUrl: '/app/shared/templates/content/notifications-content.template.html',\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.state('main.task', {\r\n\t\t\t\turl: 'task/{taskID}',\r\n\t\t\t\tviews: {\r\n\t\t\t\t\t'content-container':{\r\n\t\t\t\t\t\ttemplateUrl: '/app/shared/views/content-container.view.html',\r\n\t\t\t\t\t\tcontroller: 'taskContentContainerController',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'toolbar@main.task': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/shared/templates/toolbar.template.html',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'left-sidenav@main.task': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/shared/templates/sidenavs/main-left-sidenav.template.html',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'content@main.task':{\r\n\t\t\t\t\t\ttemplateUrl: '/app/shared/templates/content/task-content.template.html',\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}]);","designerModule\r\n\t.controller('mainViewController', ['$scope', '$state', '$mdDialog', '$mdSidenav', '$mdToast', 'User', 'Preloader', 'Notification', function($scope, $state, $mdDialog, $mdSidenav, $mdToast, User, Preloader, Notification){\r\n\t\t$scope.toggleSidenav = function(menuID){\r\n\t\t\t$mdSidenav(menuID).toggle();\r\n\t\t}\r\n\r\n\t\t$scope.menu = {};\r\n\r\n\t\t$scope.menu.static = [\r\n\t\t\t{\r\n\t\t\t\t'state': 'main',\r\n\t\t\t\t'icon': 'mdi-view-dashboard',\r\n\t\t\t\t'label': 'Dashboard',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'state': 'main.tracker',\r\n\t\t\t\t'icon': 'mdi-view-list',\r\n\t\t\t\t'label': 'Tracker',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'state': 'main.notifications',\r\n\t\t\t\t'icon': 'mdi-bell',\r\n\t\t\t\t'label': 'Notifications',\r\n\t\t\t},\r\n\t\t]\r\n\t\t\r\n\r\n\t\t$scope.logout = function(){\r\n\t\t\tUser.logout()\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\twindow.location.href = '/';\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.changePassword = function()\r\n\t\t{\r\n\t\t\t$mdDialog.show({\r\n\t\t      controller: 'changePasswordDialogController',\r\n\t\t      templateUrl: '/app/shared/templates/dialogs/change-password-dialog.template.html',\r\n\t\t      parent: angular.element(document.body),\r\n\t\t      fullscreen: true,\r\n\t\t    })\r\n\t\t    .then(function(){\r\n\t\t    \t$mdToast.show(\r\n\t\t    \t\t$mdToast.simple()\r\n\t\t\t\t        .content('Password changed.')\r\n\t\t\t\t        .position('bottom right')\r\n\t\t\t\t        .hideDelay(3000)\r\n\t\t    \t);\r\n\t\t    });\r\n\t\t}\r\n\r\n\t\tvar fetchUnreadNotifications = function(){\r\n\t\t\tUser.check()\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\tformatNotification(data);\r\n\t\t\t\t\t$scope.user = data;\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\tvar formatNotification = function(data){\r\n\t\t\tangular.forEach(data.unread_notifications, function(notif){\r\n\t\t\t\tnotif.first_letter = notif.data.sender.name.charAt(0).toUpperCase();\r\n\t\t\t\tnotif.sender = notif.data.sender.name;\r\n\t\t\t\tnotif.created_at = new Date(notif.created_at);\r\n\r\n\t\t\t\tif(notif.type == 'App\\\\Notifications\\\\NotifyDesignerForNewTask'){\r\n\t\t\t\t\tnotif.message = 'assigned a task for you.';\r\n\t\t\t\t\tnotif.action = function(id){\r\n\t\t\t\t\t\t// mark as read\r\n\t\t\t\t\t\tNotification.markAsRead(id)\r\n\t\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t\tformatNotification(data);\r\n\t\t\t\t\t\t\t\t$scope.user = data;\r\n\t\t\t\t\t\t\t\t$state.go('main.task', {'taskID': notif.data.attachment.task_id});\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if(notif.type == 'App\\\\Notifications\\\\NotifyDesignerForCompleteTask'){\r\n\t\t\t\t\tnotif.message = 'marked your task ' + notif.data.attachment.file_name + ' as complete.';\r\n\t\t\t\t\tnotif.action = function(id){\r\n\t\t\t\t\t\t// mark as read\r\n\t\t\t\t\t\tNotification.markAsRead(id)\r\n\t\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t\tformatNotification(data);\r\n\t\t\t\t\t\t\t\t$scope.user = data;\r\n\t\t\t\t\t\t\t\t$state.go('main.task', {'taskID': notif.data.attachment.id});\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if(notif.type == 'App\\\\Notifications\\\\NotifyComment'){\r\n\t\t\t\t\tnotif.message = 'commented on your task on ' + notif.data.attachment.file_name + '.';\r\n\t\t\t\t\tnotif.action = function(id){\r\n\t\t\t\t\t\t// mark as read\r\n\t\t\t\t\t\tNotification.markAsRead(id)\r\n\t\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t\tformatNotification(data);\r\n\t\t\t\t\t\t\t\t$scope.user = data;\r\n\t\t\t\t\t\t\t\t$state.go('main.task', {'taskID': notif.data.attachment.id});\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if(notif.type == 'App\\\\Notifications\\\\NotifyDesignerForTaskRework'){\r\n\t\t\t\t\tnotif.message = 'marked your task ' + notif.data.attachment.file_name + ' as rework.';\r\n\t\t\t\t\tnotif.action = function(id){\r\n\t\t\t\t\t\t// mark as read\r\n\t\t\t\t\t\tNotification.markAsRead(id)\r\n\t\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t\tformatNotification(data);\r\n\t\t\t\t\t\t\t\t$scope.user = data;\r\n\t\t\t\t\t\t\t\t$state.go('main.task', {'taskID': notif.data.attachment.id});\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\t$scope.markAsRead = function(id){\r\n\t\t\tNotification.markAsRead(id)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\tformatNotification(data);\r\n\t\t\t\t\t$scope.user = data;\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\t$scope.markAllAsRead = function(){\r\n\t\t\tNotification.markAllAsRead()\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\tformatNotification(data);\r\n\t\t\t\t\t$scope.user = data;\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\tUser.check()\r\n\t\t\t.success(function(data){\r\n\t\t\t\tformatNotification(data);\r\n\r\n\t\t\t\t$scope.user = data;\r\n\r\n\t\t\t\tvar pusher = new Pusher('7c041c12ae347877d32d', {\r\n\t\t\t      encrypted: true\r\n\t\t\t    });\r\n\r\n\t\t\t\tvar channel = {};\r\n\r\n\t\t\t\tchannel.designer = pusher.subscribe('designer');\r\n\t\t\t\tchannel.user = pusher.subscribe('user.' + $scope.user.id);\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t    channel.user.bindings = [\r\n\t\t\t\t    channel.user.bind('App\\\\Events\\\\PusherNotifyDesignerForNewTask', function(data) {\r\n\t\t\t\t    \tfetchUnreadNotifications();\r\n\t\t\t\t    \tvar message = data.sender.name + ' assigned a task for you.';\r\n\t\t\t\t    \tPreloader.newNotification(message);\r\n\t\t\t\t\t\t$scope.$broadcast('refresh');\r\n\t\t\t\t    }),\r\n\r\n\t\t\t\t    channel.user.bind('App\\\\Events\\\\PusherNotifyDesignerForCompleteTask', function(data) {\r\n\t\t\t\t    \tfetchUnreadNotifications();\r\n\t\t\t\t    \tvar message = data.sender.name + ' marked your task ' + data.data.file_name + ' as complete.';\r\n\t\t\t\t    \tPreloader.newNotification(message);\r\n\t\t\t\t\t\t$scope.$broadcast('refresh');\r\n\t\t\t\t    }),\r\n\r\n\t\t\t\t    channel.user.bind('App\\\\Events\\\\PusherNotifyComment', function(data) {\r\n\t\t\t\t    \tfetchUnreadNotifications();\r\n\t\t\t\t    \tvar message = data.sender.name + ' commented on your task on ' + data.data.file_name + '.';\r\n\t\t\t\t    \tPreloader.newNotification(message);\r\n\t\t\t\t    \t$scope.$broadcast('refresh');\r\n\t\t\t\t    }),\r\n\r\n\t\t\t\t    channel.user.bind('App\\\\Events\\\\PusherNotifyDesignerForTaskRework', function(data) {\r\n\t\t\t\t    \tfetchUnreadNotifications();\r\n\t\t\t\t    \tvar message = data.sender.name + ' marked your task ' + data.data.file_name + ' as rework.';\r\n\t\t\t\t    \tPreloader.newNotification(message);\r\n\t\t\t\t    \t$scope.$broadcast('refresh');\r\n\t\t\t\t    }),\r\n\t\t\t    ];\r\n\t\t\t})\r\n\t}]);","designerModule\r\n\t.controller('trackerContentContainerController', ['$scope', '$state', '$filter', '$timeout', '$mdDialog', '$mdToast', '$mdBottomSheet', '$mdMedia', 'Preloader', 'Category', 'Client', 'DesignerAssigned', 'User', function($scope, $state, $filter, $timeout, $mdDialog, $mdToast, $mdBottomSheet, $mdMedia, Preloader, Category, Client, DesignerAssigned, User){\r\n\t\t$scope.toolbar = {};\r\n\r\n\t\t$scope.toolbar.childState = 'Tracker';\r\n\r\n\t\t$scope.toolbar.getItems = function(query){\r\n\t\t\t$scope.showInactive = true;\r\n\t\t\tvar results = query ? $filter('filter')($scope.toolbar.items, query) : $scope.toolbar.items;\r\n\t\t\treturn results;\r\n\t\t}\r\n\t\t$scope.toolbar.searchAll = true;\r\n\r\n\t\t$scope.$on('refresh', function(){\r\n\t\t\t$scope.init($scope.subheader.current.request);\r\n\t\t});\r\n\t\t\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.task.busy = true;\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.task.busy = false;\r\n\t\t\t$scope.searchBar = false;\r\n\t\t\t$scope.toolbar.searchText = '';\r\n\t\t\t$scope.toolbar.searchItem = '';\r\n\t\t\t$scope.showInactive = false;\r\n\t\t\t/* Cancels the paginate when the user sent a query */\r\n\t\t\tif($scope.searched){\r\n\t\t\t\t$scope.task.page = 1;\r\n\t\t\t\t$scope.task.no_matches = false;\r\n\t\t\t\t$scope.task.items = [];\r\n\t\t\t\t$scope.searched = false;\r\n\r\n\t\t\t\t$scope.init($scope.subheader.current.request);\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.isLoading = true;\r\n  \t\t\t$scope.task.show = false;\r\n  \t\t\t$scope.searched = true;\r\n  \t\t\t$scope.init($scope.subheader.current.request, true);\r\n\t\t};\r\n\r\n\t\t/* Sets up the page for what tab it is*/\r\n\t\tvar setInit = function(nav){\r\n\t\t\t$scope.subheader.current = nav;\r\n\r\n\t\t\t$scope.toolbar.items = [];\r\n\t\t\t\r\n\t\t\t$scope.init($scope.subheader.current.request);\r\n\t\t}\r\n\r\n\t\t$scope.fab = {};\r\n\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\r\n\t\t$scope.subheader.show = true;\r\n\r\n\t\t$scope.subheader.navs = [\r\n\t\t\t{\r\n\t\t\t\t'label':'Pending',\r\n\t\t\t\t'request': {\r\n\t\t\t\t\t'withTask': [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation' : 'category',\r\n\t\t\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation' : 'client',\r\n\t\t\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t\t'where': [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'label':'status',\r\n\t\t\t\t\t\t\t'condition': '=',\r\n\t\t\t\t\t\t\t'value': 'pending',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t\t'paginate': 20,\r\n\t\t\t\t},\r\n\t\t\t\taction: function(current){\r\n\t\t\t\t\tsetInit(current);\r\n\t\t\t\t},\r\n\t\t\t\t'menu': [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'label': 'Batch start',\r\n\t\t\t\t\t\t'icon': 'mdi-timer',\r\n\t\t\t\t\t\taction: function(){\r\n\t\t\t\t\t\t\t$scope.selectMultiple = true;\r\n\t\t\t\t\t\t\t$scope.fab.label = 'Start';\r\n\t\t\t\t\t\t\t$scope.fab.icon = this.icon;\r\n\t\t\t\t\t\t\t$scope.fab.show = true;\r\n\t\t\t\t\t\t\t$scope.fab.action = function(){\r\n\t\t\t\t\t\t\t\tPreloader.set($scope.task.items);\r\n\t\t\t\t\t\t\t\t$mdDialog.show({\r\n\t\t\t\t\t\t\t      \tcontroller: 'batchStartTaskDialogController',\r\n\t\t\t\t\t\t\t      \ttemplateUrl: '/app/shared/templates/dialogs/batch-action-task-dialog.template.html',\r\n\t\t\t\t\t\t\t      \tparent: angular.element(document.body),\r\n\t\t\t\t\t\t\t      \tfullscreen: true,\r\n\t\t\t\t\t\t\t    })\r\n\t\t\t\t\t\t\t    .then(function(){\r\n\t\t\t\t\t\t\t    \t$scope.selectMultiple = false;\r\n\t\t\t\t\t\t\t    \t$scope.fab.show = false;\r\n\t\t\t\t\t\t\t\t\t$scope.subheader.refresh();\r\n\t\t\t\t\t\t\t    })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'label':'In Progress',\r\n\t\t\t\t'request': {\r\n\t\t\t\t\t'withTask': [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation' : 'category',\r\n\t\t\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation' : 'client',\r\n\t\t\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation': 'designer_assigned',\r\n\t\t\t\t\t\t\t'withTrashed': false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation': 'quality_control_assigned',\r\n\t\t\t\t\t\t\t'withTrashed': false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation': 'reworks',\r\n\t\t\t\t\t\t\t'withTrashed': false,\r\n\t\t\t\t\t\t\t'with': [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t'relation' : 'designer',\r\n\t\t\t\t\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t'relation' : 'quality_control',\r\n\t\t\t\t\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t\t'where': [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'label':'status',\r\n\t\t\t\t\t\t\t'condition': '=',\r\n\t\t\t\t\t\t\t'value': 'in_progress',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t\t'paginate': 20,\r\n\t\t\t\t},\r\n\t\t\t\taction: function(current){\r\n\t\t\t\t\tsetInit(current);\r\n\t\t\t\t},\r\n\t\t\t\t'menu': [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'label': 'Batch For QC',\r\n\t\t\t\t\t\t'icon': 'mdi-timer-off',\r\n\t\t\t\t\t\taction: function(){\r\n\t\t\t\t\t\t\t$scope.selectForQC = true;\r\n\t\t\t\t\t\t\t$scope.fab.label = 'For QC';\r\n\t\t\t\t\t\t\t$scope.fab.icon = this.icon;\r\n\t\t\t\t\t\t\t$scope.fab.show = true;\r\n\t\t\t\t\t\t\t$scope.fab.action = function(){\r\n\t\t\t\t\t\t\t\tPreloader.set($scope.task.items);\r\n\t\t\t\t\t\t\t\t$mdDialog.show({\r\n\t\t\t\t\t\t\t      \tcontroller: 'batchForQCDialogController',\r\n\t\t\t\t\t\t\t      \ttemplateUrl: '/app/shared/templates/dialogs/batch-action-task-dialog.template.html',\r\n\t\t\t\t\t\t\t      \tparent: angular.element(document.body),\r\n\t\t\t\t\t\t\t      \tfullscreen: true,\r\n\t\t\t\t\t\t\t    })\r\n\t\t\t\t\t\t\t    .then(function(){\r\n\t\t\t\t\t\t\t    \t$scope.selectForQC = false;\r\n\t\t\t\t\t\t\t    \t$scope.fab.show = false;\r\n\t\t\t\t\t\t\t\t\t$scope.subheader.refresh();\r\n\t\t\t\t\t\t\t    })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'label': 'Batch For QC Revised',\r\n\t\t\t\t\t\t'icon': 'mdi-repeat-off',\r\n\t\t\t\t\t\taction: function(){\r\n\t\t\t\t\t\t\t$scope.selectRework = true;\r\n\t\t\t\t\t\t\t$scope.fab.label = 'For QC Revised';\r\n\t\t\t\t\t\t\t$scope.fab.icon = this.icon;\r\n\t\t\t\t\t\t\t$scope.fab.show = true;\r\n\t\t\t\t\t\t\t$scope.fab.action = function(){\r\n\t\t\t\t\t\t\t\tPreloader.set($scope.task.items);\r\n\t\t\t\t\t\t\t\t$mdDialog.show({\r\n\t\t\t\t\t\t\t      \tcontroller: 'batchForQCRevisedDialogController',\r\n\t\t\t\t\t\t\t      \ttemplateUrl: '/app/shared/templates/dialogs/batch-action-task-dialog.template.html',\r\n\t\t\t\t\t\t\t      \tparent: angular.element(document.body),\r\n\t\t\t\t\t\t\t      \tfullscreen: true,\r\n\t\t\t\t\t\t\t    })\r\n\t\t\t\t\t\t\t    .then(function(){\r\n\t\t\t\t\t\t\t    \t$scope.selectRework = false;\r\n\t\t\t\t\t\t\t    \t$scope.fab.show = false;\r\n\t\t\t\t\t\t\t\t\t$scope.subheader.refresh();\r\n\t\t\t\t\t\t\t    })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'label':'For QC',\r\n\t\t\t\t'request': {\r\n\t\t\t\t\t'withTask': [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation' : 'category',\r\n\t\t\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation' : 'client',\r\n\t\t\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation': 'quality_control_assigned',\r\n\t\t\t\t\t\t\t'withTrashed': false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t\t'where': [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'label':'status',\r\n\t\t\t\t\t\t\t'condition': '=',\r\n\t\t\t\t\t\t\t'value': 'for_qc',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t\t'paginate': 20,\r\n\t\t\t\t},\r\n\t\t\t\taction: function(current){\r\n\t\t\t\t\tsetInit(current);\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'label':'Rework',\r\n\t\t\t\t'request': {\r\n\t\t\t\t\t'withTask': [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation' : 'category',\r\n\t\t\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation' : 'client',\r\n\t\t\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation': 'designer_assigned',\r\n\t\t\t\t\t\t\t'withTrashed': false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation': 'quality_control_assigned',\r\n\t\t\t\t\t\t\t'withTrashed': false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation': 'reworks',\r\n\t\t\t\t\t\t\t'withTrashed': false,\r\n\t\t\t\t\t\t\t'with': [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t'relation' : 'designer',\r\n\t\t\t\t\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t'relation' : 'quality_control',\r\n\t\t\t\t\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t\t'where': [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'label':'status',\r\n\t\t\t\t\t\t\t'condition': '=',\r\n\t\t\t\t\t\t\t'value': 'rework',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t\t'paginate': 20,\r\n\t\t\t\t},\r\n\t\t\t\taction: function(current){\r\n\t\t\t\t\tsetInit(current);\r\n\t\t\t\t},\r\n\t\t\t\t'menu': [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'label': 'Batch revise',\r\n\t\t\t\t\t\t'icon': 'mdi-timer',\r\n\t\t\t\t\t\taction: function(){\r\n\t\t\t\t\t\t\t$scope.selectMultiple = true;\r\n\t\t\t\t\t\t\t$scope.fab.label = 'Revise';\r\n\t\t\t\t\t\t\t$scope.fab.icon = this.icon;\r\n\t\t\t\t\t\t\t$scope.fab.show = true;\r\n\t\t\t\t\t\t\t$scope.fab.action = function(){\r\n\t\t\t\t\t\t\t\tPreloader.set($scope.task.items);\r\n\t\t\t\t\t\t\t\t$mdDialog.show({\r\n\t\t\t\t\t\t\t      \tcontroller: 'batchReviseTaskDialogController',\r\n\t\t\t\t\t\t\t      \ttemplateUrl: '/app/shared/templates/dialogs/batch-action-task-dialog.template.html',\r\n\t\t\t\t\t\t\t      \tparent: angular.element(document.body),\r\n\t\t\t\t\t\t\t      \tfullscreen: true,\r\n\t\t\t\t\t\t\t    })\r\n\t\t\t\t\t\t\t    .then(function(){\r\n\t\t\t\t\t\t\t    \t$scope.selectMultiple = false;\r\n\t\t\t\t\t\t\t    \t$scope.fab.show = false;\r\n\t\t\t\t\t\t\t\t\t$scope.subheader.refresh();\r\n\t\t\t\t\t\t\t    })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'label':'Complete',\r\n\t\t\t\t'request': {\r\n\t\t\t\t\t'withTask': [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation' : 'category',\r\n\t\t\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation' : 'client',\r\n\t\t\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation': 'designer_assigned',\r\n\t\t\t\t\t\t\t'withTrashed': false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation': 'quality_control_assigned',\r\n\t\t\t\t\t\t\t'withTrashed': false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t\t'where': [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'label':'status',\r\n\t\t\t\t\t\t\t'condition': '=',\r\n\t\t\t\t\t\t\t'value': 'complete',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t\t'paginate': 20,\r\n\t\t\t\t},\r\n\t\t\t\taction: function(current){\r\n\t\t\t\t\tsetInit(current);\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t];\r\n\r\n\t\t$scope.subheader.sort = [\r\n\t\t\t{\r\n\t\t\t\t'label': 'File Name',\r\n\t\t\t\t'type': 'file_name',\r\n\t\t\t\t'sortReverse': false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'label': 'Category',\r\n\t\t\t\t'type': 'category',\r\n\t\t\t\t'sortReverse': false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'label': 'Delivery Date',\r\n\t\t\t\t'type': 'delivery_date',\r\n\t\t\t\t'sortReverse': false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'label': 'Live Date',\r\n\t\t\t\t'type': 'live_date',\r\n\t\t\t\t'sortReverse': false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'label': 'Recently added',\r\n\t\t\t\t'type': 'created_at',\r\n\t\t\t\t'sortReverse': false,\r\n\t\t\t},\r\n\t\t];\r\n\r\n\t\t$scope.subheader.cancelSelectMultiple = function(){\r\n\t\t\t$scope.selectMultiple = false;\r\n\t\t\t$scope.selectForQC = false;\r\n\t\t\t$scope.selectRework = false;\r\n\t\t\t$scope.fab.show = false;\r\n\r\n\t\t\tangular.forEach($scope.task.items, function(item){\r\n\t\t\t\titem.include = false;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.subheader.refresh = function(){\r\n\t\t\t$scope.isLoading = true;\r\n  \t\t\t$scope.task.show = false;\r\n\r\n  \t\t\t$scope.init($scope.subheader.current.request);\r\n\t\t}\r\n\r\n\t\t$scope.subheader.toggleActive = function(){\r\n\t\t\t$scope.showInactive = !$scope.showInactive;\r\n\t\t}\r\n\r\n\t\t$scope.subheader.sortBy = function(filter){\r\n\t\t\tfilter.sortReverse = !filter.sortReverse;\t\t\t\r\n\t\t\t$scope.sortType = filter.type;\r\n\t\t\t$scope.sortReverse = filter.sortReverse;\r\n\t\t}\r\n\r\n\t\t$scope.subheader.setCategoryFilter = function(filter){\r\n\t\t\tif($scope.categoryFilter == filter)\r\n\t\t\t{\r\n\t\t\t\treturn $scope.categoryFilter = '';\r\n\t\t\t}\r\n\r\n\t\t\t$scope.categoryFilter = filter;\r\n\t\t}\r\n\r\n\t\t$scope.subheader.setClientFilter = function(filter){\r\n\t\t\tif($scope.clientFilter == filter)\r\n\t\t\t{\r\n\t\t\t\treturn $scope.clientFilter = '';\r\n\t\t\t}\r\n\r\n\t\t\t$scope.clientFilter = filter;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\r\n\t\t$scope.rightSidenav.show = false;\r\n\r\n\t\tvar pushItem = function(item){\r\n\t\t\titem.first_letter = item.file_name.charAt(0).toUpperCase();\r\n\t\t\titem.created_at = new Date(item.created_at);\r\n\t\t\titem.updated_at = new Date(item.updated_at);\r\n\t\t\titem.delivery_date = new Date(item.delivery_date);\r\n\t\t\titem.live_date = new Date(item.live_date);\r\n\t\t\titem.category = item.category.name;\r\n\t\t\titem.client = item.client.name;\r\n\r\n\t\t\tvar filter = {};\r\n\t\t\tfilter.display = item.file_name;\r\n\r\n\t\t\t$scope.toolbar.items.push(filter);\r\n\t\t\t$scope.task.items.push(item);\r\n\t\t}\r\n\r\n\t\t$scope.init = function(request, searched){\r\n\t\t\t$scope.selectMultiple = false;\r\n\t\t\t$scope.selectForQC = false;\r\n\t\t\t$scope.selectRework = false;\r\n\t\t\t\r\n\t\t\tCategory.index()\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.categories = data;\r\n\t\t\t\t})\r\n\r\n\t\t\tClient.index()\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.clients = data;\r\n\t\t\t\t})\r\n\r\n\t\t\t$scope.task = {};\r\n\t\t\t$scope.task.items = [];\r\n\t\t\t$scope.toolbar.items = [];\r\n\r\n\t\t\tif(searched)\r\n\t\t\t{\r\n\t  \t\t\trequest.searchText = $scope.toolbar.searchText;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t$scope.searchBar = false;\r\n\t\t\t\t$scope.toolbar.searchText = '';\r\n\t\t\t\t$scope.toolbar.searchItem = '';\r\n\t\t\t\t$scope.task.page = 1;\r\n\t\t\t\t$scope.task.no_matches = false;\r\n\t\t\t\t$scope.searched = false;\r\n\t\t\t\trequest.searchText = null;\r\n\t\t\t}\r\n\r\n\t\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t\t$scope.task.page = 2;\r\n\r\n\t\t\tDesignerAssigned.paginate(request)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\tif(!data)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$scope.task.show = true;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t$scope.task.details = data;\r\n\t\t\t\t\t$scope.task.show = true;\r\n\r\n\t\t\t\t\t// Hides inactive records\r\n\t\t\t\t\t$scope.showInactive = false;\r\n\r\n\t\t\t\t\tif(data.data.length){\r\n\t\t\t\t\t\t// iterate over each record and set the updated_at date and first letter\r\n\t\t\t\t\t\tangular.forEach(data.data, function(item){\r\n\t\t\t\t\t\t\tif(item.task)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tpushItem(item.task);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$scope.task.paginateLoad = function(){\r\n\t\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\t\tif($scope.task.busy || ($scope.task.page > $scope.task.details.last_page)){\r\n\t\t\t\t\t\t\t$scope.isLoading = false;\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t\t *\r\n\t\t\t\t\t\t*/\r\n\t\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t\t$scope.task.busy = true;\r\n\t\t\t\t\t\t$scope.isLoading = true;\r\n\t\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\t\tDesignerAssigned.paginate(request, $scope.task.page)\r\n\t\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t\t$scope.task.page++;\r\n\r\n\t\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\t\tangular.forEach(data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t\tpushItem(item.task);\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t\t$scope.task.busy = false;\r\n\t\t\t\t\t\t\t\t$scope.isLoading = false;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t};\r\n\r\n\t\t$scope.subheader.currentNavItem = $scope.subheader.navs[0].label;\r\n\t\t\r\n\t\t/* Sets up the page for what tab it is*/\r\n\t\tsetInit($scope.subheader.navs[0]);\r\n\r\n\t}]);","designerModule\r\n\t.controller('batchForQCDialogController', ['$scope', '$mdDialog', 'Preloader', 'DesignerAssigned', function($scope, $mdDialog, Preloader, DesignerAssigned){\r\n\t\t$scope.tasks = Preloader.get();\r\n\t\t$scope.busy = false;\r\n\r\n\t\t$scope.label = 'Batch For QC';\r\n\t\t$scope.action = 'For QC';\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\tif(!$scope.busy){\r\n\t\t\t\t$scope.busy = true;\r\n\r\n\t\t\t\tvar query = {};\r\n\t\t\t\tquery.tasks = [];\r\n\t\t\t\tquery.batch = true;\r\n\r\n\t\t\t\tangular.forEach($scope.tasks, function(item){\r\n\t\t\t\t\tif(item.include)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tquery.tasks.push(item);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tDesignerAssigned.forQC(query)\r\n\t\t\t\t\t.success(function(){\r\n\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}]);","designerModule\r\n\t.controller('batchForQCRevisedDialogController', ['$scope', '$mdDialog', 'Preloader', 'Rework', function($scope, $mdDialog, Preloader, Rework){\r\n\t\t$scope.tasks = Preloader.get();\r\n\t\t$scope.busy = false;\r\n\r\n\t\t$scope.label = 'Batch For QC Revised';\r\n\t\t$scope.action = 'For QC Revised';\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\tif(!$scope.busy){\r\n\t\t\t\t$scope.busy = true;\r\n\r\n\t\t\t\tvar query = {};\r\n\t\t\t\tquery.tasks = [];\r\n\t\t\t\tquery.batch = true;\r\n\r\n\t\t\t\tangular.forEach($scope.tasks, function(item){\r\n\t\t\t\t\tif(item.include)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tquery.tasks.push(item);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tRework.forQC(query)\r\n\t\t\t\t\t.success(function(){\r\n\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}]);","designerModule\r\n\t.controller('batchReviseTaskDialogController', ['$scope', '$mdDialog', 'Preloader', 'Rework', function($scope, $mdDialog, Preloader, Rework){\r\n\t\t$scope.tasks = Preloader.get();\r\n\t\t$scope.busy = false;\r\n\r\n\t\t$scope.label = 'Batch Start Revision';\r\n\t\t$scope.action = 'Start Revision';\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\tif(!$scope.busy){\r\n\t\t\t\t$scope.busy = true;\r\n\r\n\t\t\t\tvar query = {};\r\n\t\t\t\tquery.tasks = [];\r\n\t\t\t\tquery.batch = true;\r\n\r\n\t\t\t\tangular.forEach($scope.tasks, function(item){\r\n\t\t\t\t\tif(item.include)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tquery.tasks.push(item);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tRework.revise(query)\r\n\t\t\t\t\t.success(function(){\r\n\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}]);","designerModule\r\n\t.controller('batchStartTaskDialogController', ['$scope', '$mdDialog', 'Preloader', 'DesignerAssigned', function($scope, $mdDialog, Preloader, DesignerAssigned){\r\n\t\t$scope.tasks = Preloader.get();\r\n\t\t$scope.busy = false;\r\n\r\n\t\t$scope.label = 'Batch Start';\r\n\t\t$scope.action = 'Start';\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\tif(!$scope.busy){\r\n\t\t\t\t$scope.busy = true;\r\n\r\n\t\t\t\tvar query = {};\r\n\t\t\t\tquery.tasks = [];\r\n\t\t\t\tquery.batch = true;\r\n\r\n\t\t\t\tangular.forEach($scope.tasks, function(item){\r\n\t\t\t\t\tif(item.include)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tquery.tasks.push(item);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tDesignerAssigned.start(query)\r\n\t\t\t\t\t.success(function(){\r\n\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}]);"],"sourceRoot":"/source/"}