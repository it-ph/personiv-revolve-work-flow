{"version":3,"sources":["shared.module.js","shared.routes.js","controllers/change-password-dialog.controller.js","controllers/home-page.controller.js","controllers/shared-dashboard-content-container.controller.js","controllers/shared-main-view.controller.js","controllers/shared-notifications-content-container-controller.js","controllers/sheets-content-container.controller.js","controllers/task-content-container.controller.js","controllers/tracker-content-container.controller.js","controllers/upload-content-container.controller.js","factories/category.factory.js","factories/client.factory.js","factories/comment.factory.js","factories/designer-assigned.factory.js","factories/notification.factory.js","factories/quality-control-assigned.factory.js","factories/quality-control-task.factory.js","factories/rework.factory.js","factories/spreadsheet.factory.js","factories/task.factory.js","factories/user.factory.js","services/preloader.service.js","services/setting.service.js","controllers/bottom-sheets/item-actions-bottom-sheet.controller.js","controllers/dialogs/assign-tasks-dialog.controller.js","controllers/dialogs/create-categories-dialog.controller.js","controllers/dialogs/create-clients-dialog.controller.js","controllers/dialogs/create-tasks-dialog.controller.js","controllers/dialogs/download-dialog.controller.js","controllers/dialogs/edit-categories-dialog.controller.js","controllers/dialogs/edit-clients-dialog.controller.js","controllers/dialogs/item-actions-dialog.controller.js","controllers/dialogs/reassign-tasks-dialog.controller.js","controllers/toasts/custom-notification-toast.controller.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxnhxMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpgteA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvhGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"shared.js","sourcesContent":["var sharedModule = angular.module('sharedModule', [\r\n\t'ui.router',\r\n\t'ngMaterial',\r\n\t'ngMessages',\r\n\t'infinite-scroll',\r\n\t'chart.js',\r\n\t'angularMoment',\r\n\t'angularFileUpload'\r\n]);","sharedModule\r\n\t.config(['$urlRouterProvider', '$stateProvider', '$mdThemingProvider', function($urlRouterProvider, $stateProvider, $mdThemingProvider){\r\n\t\t/* Defaul Theme Blue - Light Blue */\r\n\t\t$mdThemingProvider.theme('default')\r\n\t\t\t.primaryPalette('light-blue')\r\n\t\t\t.accentPalette('pink')\r\n\t\t\r\n\t\t/* Dark Theme - Blue */\r\n\t\t$mdThemingProvider.theme('dark', 'default')\r\n\t      \t.primaryPalette('blue')\r\n\t\t\t.dark();\r\n\r\n\t\t$urlRouterProvider\r\n\t\t\t.otherwise('/page-not-found')\r\n\t\t\t.when('', '/');\r\n\r\n\t\t$stateProvider\r\n\t\t\t.state('page-not-found',{\r\n\t\t\t\turl: '/page-not-found',\r\n\t\t\t\ttemplateUrl: '/app/shared/views/page-not-found.view.html',\r\n\t\t\t})\r\n\r\n\t\t$mdThemingProvider.theme('dark-orange').backgroundPalette('orange').dark();\r\n\t\t$mdThemingProvider.theme('dark-teal').backgroundPalette('teal').dark();\r\n\t}]);","sharedModule\r\n\t.controller('changePasswordDialogController', ['$scope', '$mdDialog', 'User', 'Preloader', function($scope, $mdDialog, User, Preloader){\r\n\t\t$scope.password = {};\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.checkPassword = function(){\r\n\t\t\tUser.checkPassword($scope.password)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.match = data;\r\n\t\t\t\t\t$scope.show = true;\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\t$scope.showErrors = true;\r\n\t\t\tif($scope.changePasswordForm.$invalid){\r\n\t\t\t\tangular.forEach($scope.changePasswordForm.$error, function(field){\r\n\t\t\t\t\tangular.forEach(field, function(errorField){\r\n\t\t\t\t\t\terrorField.$setTouched();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse if($scope.password.old == $scope.password.new || $scope.password.new != $scope.password.confirm)\r\n\t\t\t{\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t$scope.busy = true;\r\n\t\t\t\tUser.changePassword($scope.password)\r\n\t\t\t\t\t.success(function(){\r\n\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}]);","sharedModule\r\n\t.controller('homePageController', ['$scope', function($scope){\r\n\t\t$scope.show = function(){\r\n\t\t\tangular.element(document.querySelector('.main-view')).removeClass('no-opacity');\r\n\t\t};\r\n\t}]);","sharedModule\r\n\t.controller('sharedDashboardContentContainerController', ['$scope', '$filter', '$state', '$mdDialog', 'Preloader', 'Category', 'Client', 'Task', function($scope, $filter, $state, $mdDialog, Preloader, Category, Client, Task){\r\n\t\t$scope.$on('refresh', function(){\r\n\t\t\t$scope.init($scope.subheader.current.request);\r\n\t\t});\r\n\r\n\t\t$scope.toolbar = {};\r\n\r\n\t\t$scope.toolbar.childState = 'Dashboard';\r\n\r\n\t\t$scope.toolbar.getItems = function(query){\r\n\t\t\tvar results = query ? $filter('filter')($scope.toolbar.items, query) : $scope.toolbar.items;\r\n\t\t\treturn results;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.task.busy = true;\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.task.busy = false;\r\n\t\t\t$scope.searchBar = false;\r\n\t\t\t$scope.toolbar.searchText = '';\r\n\t\t\t$scope.toolbar.searchItem = '';\r\n\t\t};\r\n\r\n\t\t/* Sets up the page for what tab it is*/\r\n\t\tvar setInit = function(nav){\r\n\t\t\t$scope.subheader.current = nav;\r\n\r\n\t\t\t$scope.toolbar.items = [];\r\n\t\t\t\r\n\t\t\t$scope.init($scope.subheader.current.request);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\r\n\t\t$scope.subheader.show = true;\r\n\r\n\t\t$scope.subheader.sort = [\r\n\t\t\t{\r\n\t\t\t\t'label': 'File Name',\r\n\t\t\t\t'type': 'file_name',\r\n\t\t\t\t'sortReverse': false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'label': 'Category',\r\n\t\t\t\t'type': 'category',\r\n\t\t\t\t'sortReverse': false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'label': 'Delivery Date',\r\n\t\t\t\t'type': 'delivery_date',\r\n\t\t\t\t'sortReverse': false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'label': 'Live Date',\r\n\t\t\t\t'type': 'live_date',\r\n\t\t\t\t'sortReverse': false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'label': 'Recently added',\r\n\t\t\t\t'type': 'created_at',\r\n\t\t\t\t'sortReverse': false,\r\n\t\t\t},\r\n\t\t];\r\n\r\n\t\t$scope.subheader.refresh = function(){\r\n\t\t\t$scope.isLoading = true;\r\n  \t\t\t$scope.task.show = false;\r\n\r\n  \t\t\t$scope.init($scope.subheader.current.request);\r\n\t\t}\r\n\r\n\t\t$scope.subheader.sortBy = function(filter){\r\n\t\t\tfilter.sortReverse = !filter.sortReverse;\t\t\t\r\n\t\t\t$scope.sortType = filter.type;\r\n\t\t\t$scope.sortReverse = filter.sortReverse;\r\n\t\t}\r\n\r\n\t\t$scope.subheader.setCategoryFilter = function(filter){\r\n\t\t\tif($scope.categoryFilter == filter)\r\n\t\t\t{\r\n\t\t\t\treturn $scope.categoryFilter = '';\r\n\t\t\t}\r\n\r\n\t\t\t$scope.categoryFilter = filter;\r\n\t\t}\r\n\r\n\t\t$scope.subheader.setClientFilter = function(filter){\r\n\t\t\tif($scope.clientFilter == filter)\r\n\t\t\t{\r\n\t\t\t\treturn $scope.clientFilter = '';\r\n\t\t\t}\r\n\r\n\t\t\t$scope.clientFilter = filter;\r\n\t\t}\r\n\r\n\t\tvar pushNavs = function(data){\r\n\t\t\tvar item = {\r\n\t\t\t\t'label': data.label,\r\n\t\t\t\t'request': {\r\n\t\t\t\t\t'withTrashed': false,\r\n\t\t\t\t\t'with': [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation' : 'category',\r\n\t\t\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation' : 'client',\r\n\t\t\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation': 'designer_assigned',\r\n\t\t\t\t\t\t\t'withTrashed': false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation': 'quality_control_assigned',\r\n\t\t\t\t\t\t\t'withTrashed': false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation': 'reworks',\r\n\t\t\t\t\t\t\t'withTrashed': false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t\t'whereBetween':\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'label':'updated_at',\r\n\t\t\t\t\t\t'start': data.start,\r\n\t\t\t\t\t\t'end': data.end,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'where': [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'label':'status',\r\n\t\t\t\t\t\t\t'condition': '=',\r\n\t\t\t\t\t\t\t'value': 'complete',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t\t'paginate': 100,\r\n\t\t\t\t},\r\n\t\t\t\t'menu': [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'label': 'Download',\r\n\t\t\t\t\t\t'icon': 'mdi-download',\r\n\t\t\t\t\t\taction: function(){\r\n\t\t\t\t\t\t\t$mdDialog.show({\r\n\t\t\t\t\t\t      \tcontroller: 'downloadDialogController',\r\n\t\t\t\t\t\t      \ttemplateUrl: '/app/shared/templates/dialogs/download-dialog.template.html',\r\n\t\t\t\t\t\t      \tparent: angular.element(document.body),\r\n\t\t\t\t\t\t      \tfullscreen: true,\r\n\t\t\t\t\t\t    })\r\n\t\t\t\t\t\t    .then(function(){\r\n\t\t\t\t\t\t    })\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t\taction: function(current){\r\n\t\t\t\t\tsetInit(current);\r\n\t\t\t\t},\r\n\t\t\t}\r\n\r\n\t\t\t$scope.subheader.navs.push(item);\r\n\t\t}\r\n\r\n\t\tvar days = [\r\n\t\t\t{\r\n\t\t\t\t'label': 'Monday',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'label': 'Tuesday',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'label': 'Wednesday',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'label': 'Thursday',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'label': 'Friday',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'label': 'Saturday',\r\n\t\t\t},\r\n\t\t];\r\n\r\n\t\tvar getMonday = function(d){\r\n\t\t\td = new Date(d);\r\n\t\t\tvar day = d.getDay(),\r\n\t\t\tdiff = d.getDate() - day + (day == 0 ? -6:1);\r\n\t\t\treturn new Date(d.setDate(diff));\r\n\t\t}\r\n\r\n\t\t$scope.fetchDays = function(date)\r\n\t\t{\r\n\t\t\tvar d = new Date(date);\r\n\r\n\t\t\t$scope.subheader.navs = [];\r\n\r\n\t\t\tangular.forEach(days, function(item, key){\r\n\t\t\t\titem.start = new Date();\r\n\t\t\t\titem.start.setDate(d.getDate() + key);\r\n\r\n\t\t\t\titem.end = new Date();\r\n\t\t\t\titem.end.setDate(item.start.getDate() + 1);\r\n\r\n\t\t\t\titem.start = item.start.toDateString();\r\n\t\t\t\titem.end = item.end.toDateString();\r\n\r\n\t\t\t\tpushNavs(item);\r\n\t\t\t});\r\n\r\n\t\t\tif($scope.subheader.currentNavItem)\r\n\t\t\t{\r\n\t\t\t\t$scope.subheader.currentNavItem = $scope.subheader.navs[today.getDay() - 1].label;\r\n\r\n\t\t\t\t/* Sets up the page for what tab it is*/\r\n\t\t\t\tsetInit($scope.subheader.navs[today.getDay() - 1]);\r\n\t\t\t}\t\t\r\n\t\t}\r\n\r\n\t\t$scope.date_start = getMonday(new Date());\r\n\t\t$scope.fetchDays($scope.date_start);\r\n\t\t\r\n\t\t$scope.mondaysOnly = function(date) {\r\n\t\t    var day = date.getDay();\r\n\t\t    return day === 1;\r\n\t\t};\r\n\r\n\t\tvar today = new Date();\r\n\r\n\t\tvar pushItem = function(item){\r\n\t\t\titem.first_letter = item.file_name.charAt(0).toUpperCase();\r\n\t\t\titem.created_at = new Date(item.created_at);\r\n\t\t\titem.updated_at = new Date(item.updated_at);\r\n\t\t\titem.delivery_date = new Date(item.delivery_date);\r\n\t\t\titem.live_date = new Date(item.live_date);\r\n\t\t\titem.deleted_at = item.deleted_at ? new Date(item.deleted_at) : null;\r\n\t\t\titem.category = item.category.name;\r\n\t\t\titem.client = item.client.name;\r\n\r\n\t\t\tvar filter = {};\r\n\t\t\tfilter.display = item.file_name;\r\n\r\n\t\t\t$scope.toolbar.items.push(filter);\r\n\t\t}\r\n\r\n\t\t$scope.viewTask = function(id)\r\n\t\t{\r\n\t\t\t$state.go('main.task', {'taskID':id});\r\n\t\t}\r\n\r\n\t\t$scope.init = function(request){\r\n\t\t\tCategory.index()\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.categories = data;\r\n\t\t\t\t})\r\n\r\n\t\t\tClient.index()\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.clients = data;\r\n\t\t\t\t})\r\n\r\n\t\t\t$scope.task = {};\r\n\t\t\t$scope.task.items = [];\r\n\t\t\t$scope.toolbar.items = [];\r\n\r\n\t\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t\t$scope.task.page = 2;\r\n\r\n\t\t\tTask.enlist(request)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\tif(!data)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$scope.task.show = true;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t$scope.task.details = data;\r\n\t\t\t\t\t$scope.task.items = data.data;\r\n\t\t\t\t\t$scope.task.show = true;\r\n\r\n\t\t\t\t\tif(data.data.length){\r\n\t\t\t\t\t\t// iterate over each record and set the updated_at date and first letter\r\n\t\t\t\t\t\tangular.forEach(data.data, function(item){\r\n\t\t\t\t\t\t\tpushItem(item);\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$scope.task.paginateLoad = function(){\r\n\t\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\t\tif($scope.task.busy || ($scope.task.page > $scope.task.details.last_page)){\r\n\t\t\t\t\t\t\t$scope.isLoading = false;\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t\t *\r\n\t\t\t\t\t\t*/\r\n\t\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t\t$scope.task.busy = true;\r\n\t\t\t\t\t\t$scope.isLoading = true;\r\n\t\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\t\tTask.enlist(request, $scope.task.page)\r\n\t\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t\t$scope.task.page++;\r\n\r\n\t\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\t\tangular.forEach(data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t\tpushItem(item);\r\n\t\t\t\t\t\t\t\t\t$scope.task.items.push(item);\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t\t$scope.task.busy = false;\r\n\t\t\t\t\t\t\t\t$scope.isLoading = false;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\t$scope.subheader.currentNavItem = $scope.subheader.navs[today.getDay() - 1].label;\r\n\r\n\t\t/* Sets up the page for what tab it is*/\r\n\t\tsetInit($scope.subheader.navs[today.getDay() - 1]);\r\n\t}]);","sharedModule\r\n\t.controller('sharedMainViewController', ['$scope', '$state', '$mdDialog', '$mdSidenav', '$mdToast', 'User', 'Preloader', 'Notification', function($scope, $state, $mdDialog, $mdSidenav, $mdToast, User, Preloader, Notification){\r\n\t\t$scope.toggleSidenav = function(menuID){\r\n\t\t\t$mdSidenav(menuID).toggle();\r\n\t\t}\r\n\r\n\t\t$scope.menu = {};\r\n\r\n\t\t$scope.menu.static = [\r\n\t\t\t{\r\n\t\t\t\t'state': 'main',\r\n\t\t\t\t'icon': 'mdi-view-dashboard',\r\n\t\t\t\t'label': 'Dashboard',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'state': 'main.upload',\r\n\t\t\t\t'icon': 'mdi-file-excel',\r\n\t\t\t\t'label': 'Sheets',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'state': 'main.tracker',\r\n\t\t\t\t'icon': 'mdi-view-list',\r\n\t\t\t\t'label': 'Tracker',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'state': 'main.notifications',\r\n\t\t\t\t'icon': 'mdi-bell',\r\n\t\t\t\t'label': 'Notifications',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'state': 'main.settings',\r\n\t\t\t\t'icon': 'mdi-settings',\r\n\t\t\t\t'label': 'Settings',\r\n\t\t\t},\r\n\t\t]\r\n\t\t\r\n\r\n\t\t$scope.logout = function(){\r\n\t\t\tUser.logout()\r\n\t\t\t\t.success(function(){\r\n\t\t\t\t\twindow.location.href = '/';\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.changePassword = function()\r\n\t\t{\r\n\t\t\t$mdDialog.show({\r\n\t\t      controller: 'changePasswordDialogController',\r\n\t\t      templateUrl: '/app/shared/templates/dialogs/change-password-dialog.template.html',\r\n\t\t      parent: angular.element(document.body),\r\n\t\t      fullscreen: true,\r\n\t\t    })\r\n\t\t    .then(function(){\r\n\t\t    \t$mdToast.show(\r\n\t\t    \t\t$mdToast.simple()\r\n\t\t\t\t        .content('Password changed.')\r\n\t\t\t\t        .position('bottom right')\r\n\t\t\t\t        .hideDelay(3000)\r\n\t\t    \t);\r\n\t\t    });\r\n\t\t}\r\n\r\n\t\tvar fetchUnreadNotifications = function(){\r\n\t\t\tUser.check()\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\tformatNotification(data);\r\n\t\t\t\t\t$scope.user = data;\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\tvar formatNotification = function(data){\r\n\t\t\tangular.forEach(data.unread_notifications, function(notif){\r\n\t\t\t\tnotif.first_letter = notif.data.sender.name.charAt(0).toUpperCase();\r\n\t\t\t\tnotif.sender = notif.data.sender.name;\r\n\t\t\t\tnotif.created_at = new Date(notif.created_at);\r\n\r\n\t\t\t\tif(notif.type == 'App\\\\Notifications\\\\TaskCreated'){\r\n\t\t\t\t\tnotif.message = 'created a new task.';\r\n\t\t\t\t\tnotif.action = function(id){\r\n\t\t\t\t\t\t// mark as read\r\n\t\t\t\t\t\tNotification.markAsRead(id)\r\n\t\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t\tformatNotification(data);\r\n\t\t\t\t\t\t\t\t$scope.user = data;\r\n\t\t\t\t\t\t\t\t$state.go('main.task', {'taskID': notif.data.attachment.task_id});\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if(notif.type == 'App\\\\Notifications\\\\SpreadsheetCreated'){\r\n\t\t\t\t\tnotif.message = 'created a new sheet.';\r\n\t\t\t\t\tnotif.action = function(id){\r\n\t\t\t\t\t\t// mark as read\r\n\t\t\t\t\t\tNotification.markAsRead(id)\r\n\t\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t\tformatNotification(data);\r\n\t\t\t\t\t\t\t\t$scope.user = data;\r\n\t\t\t\t\t\t\t\t$state.go('main.sheet', {'sheetID': notif.data.attachment.id});\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if(notif.type == 'App\\\\Notifications\\\\TaskAssignedToDesigner'){\r\n\t\t\t\t\tnotif.message = 'assigned a task for ' + notif.data.attachment.designer.name + '.';\r\n\t\t\t\t\tnotif.action = function(id){\r\n\t\t\t\t\t\t// mark as read\r\n\t\t\t\t\t\tNotification.markAsRead(id)\r\n\t\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t\tformatNotification(data);\r\n\t\t\t\t\t\t\t\t$scope.user = data;\r\n\t\t\t\t\t\t\t\t$state.go('main.task', {'taskID': notif.data.attachment.task_id});\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if(notif.type == 'App\\\\Notifications\\\\DesignerTaskStart'){\r\n\t\t\t\t\tnotif.message = 'started to work on ' + notif.data.attachment.task.file_name + '.';\r\n\t\t\t\t\tnotif.action = function(id){\r\n\t\t\t\t\t\t// mark as read\r\n\t\t\t\t\t\tNotification.markAsRead(id)\r\n\t\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t\tformatNotification(data);\r\n\t\t\t\t\t\t\t\t$scope.user = data;\r\n\t\t\t\t\t\t\t\t$state.go('main.task', {'taskID': notif.data.attachment.task_id});\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if(notif.type == 'App\\\\Notifications\\\\TaskDeleted'){\r\n\t\t\t\t\tnotif.message = 'deleted a task.';\r\n\t\t\t\t\tnotif.action = function(id){\r\n\t\t\t\t\t\t// mark as read\r\n\t\t\t\t\t\tNotification.markAsRead(id)\r\n\t\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t\tformatNotification(data);\r\n\t\t\t\t\t\t\t\t$scope.user = data;\r\n\t\t\t\t\t\t\t\t$state.go('main.task', {'taskID': notif.data.attachment.id});\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if(notif.type == 'App\\\\Notifications\\\\DesignerTaskDecline'){\r\n\t\t\t\t\tnotif.message = 'declined to work on ' + notif.data.attachment.task.file_name + '.';\r\n\t\t\t\t\tnotif.action = function(id){\r\n\t\t\t\t\t\t// mark as read\r\n\t\t\t\t\t\tNotification.markAsRead(id)\r\n\t\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t\tformatNotification(data);\r\n\t\t\t\t\t\t\t\t$scope.user = data;\r\n\t\t\t\t\t\t\t\t$state.go('main.task', {'taskID': notif.data.attachment.task_id});\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if(notif.type == 'App\\\\Notifications\\\\ForQC'){\r\n\t\t\t\t\tnotif.message = 'submitted a task for quality control.';\r\n\t\t\t\t\tnotif.action = function(id){\r\n\t\t\t\t\t\t// mark as read\r\n\t\t\t\t\t\tNotification.markAsRead(id)\r\n\t\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t\tformatNotification(data);\r\n\t\t\t\t\t\t\t\t$scope.user = data;\r\n\t\t\t\t\t\t\t\t$state.go('main.task', {'taskID': notif.data.attachment.id});\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if(notif.type == 'App\\\\Notifications\\\\QualityControlTaskStart'){\r\n\t\t\t\t\tnotif.message = 'started to work on ' + notif.data.attachment.task.file_name + '.';\r\n\t\t\t\t\tnotif.action = function(id){\r\n\t\t\t\t\t\t// mark as read\r\n\t\t\t\t\t\tNotification.markAsRead(id)\r\n\t\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t\tformatNotification(data);\r\n\t\t\t\t\t\t\t\t$scope.user = data;\r\n\t\t\t\t\t\t\t\t$state.go('main.task', {'taskID': notif.data.attachment.task_id});\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if(notif.type == 'App\\\\Notifications\\\\MarkAsComplete'){\r\n\t\t\t\t\tnotif.message = 'marked ' + notif.data.attachment.task.file_name + ' as complete.';\r\n\t\t\t\t\tnotif.action = function(id){\r\n\t\t\t\t\t\t// mark as read\r\n\t\t\t\t\t\tNotification.markAsRead(id)\r\n\t\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t\tformatNotification(data);\r\n\t\t\t\t\t\t\t\t$scope.user = data;\r\n\t\t\t\t\t\t\t\t$state.go('main.task', {'taskID': notif.data.attachment.task_id});\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if(notif.type == 'App\\\\Notifications\\\\TaskRework'){\r\n\t\t\t\t\tnotif.message = 'marked ' + notif.data.attachment.task.file_name + ' as rework.';\r\n\t\t\t\t\tnotif.action = function(id){\r\n\t\t\t\t\t\t// mark as read\r\n\t\t\t\t\t\tNotification.markAsRead(id)\r\n\t\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t\tformatNotification(data);\r\n\t\t\t\t\t\t\t\t$scope.user = data;\r\n\t\t\t\t\t\t\t\t$state.go('main.task', {'taskID': notif.data.attachment.task_id});\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if(notif.type == 'App\\\\Notifications\\\\NotifyComment'){\r\n\t\t\t\t\tnotif.message = 'commented on a task on ' + notif.data.attachment.file_name + '.';\r\n\t\t\t\t\tnotif.action = function(id){\r\n\t\t\t\t\t\t// mark as read\r\n\t\t\t\t\t\tNotification.markAsRead(id)\r\n\t\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t\tformatNotification(data);\r\n\t\t\t\t\t\t\t\t$scope.user = data;\r\n\t\t\t\t\t\t\t\t$state.go('main.task', {'taskID': notif.data.attachment.id});\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if(notif.type == 'App\\\\Notifications\\\\DesignerRevisionStart'){\r\n\t\t\t\t\tnotif.message = 'started to revise ' + notif.data.attachment.task.file_name + '.';\r\n\t\t\t\t\tnotif.action = function(id){\r\n\t\t\t\t\t\t// mark as read\r\n\t\t\t\t\t\tNotification.markAsRead(id)\r\n\t\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t\tformatNotification(data);\r\n\t\t\t\t\t\t\t\t$scope.user = data;\r\n\t\t\t\t\t\t\t\t$state.go('main.task', {'taskID': notif.data.attachment.task_id});\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\t$scope.markAsRead = function(id){\r\n\t\t\tNotification.markAsRead(id)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\tformatNotification(data);\r\n\t\t\t\t\t$scope.user = data;\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\t$scope.markAllAsRead = function(){\r\n\t\t\tNotification.markAllAsRead()\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\tformatNotification(data);\r\n\t\t\t\t\t$scope.user = data;\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\tUser.check()\r\n\t\t\t.success(function(data){\r\n\t\t\t\tformatNotification(data);\r\n\r\n\t\t\t\t$scope.user = data;\r\n\r\n\t\t\t\tvar pusher = new Pusher('58891c6a307bb58de62e', {\r\n\t\t\t      encrypted: true\r\n\t\t\t    });\r\n\r\n\t\t\t\tvar channel = {};\r\n\r\n\t\t\t\tchannel.admin = pusher.subscribe('admin');\r\n\t\t\t\tchannel.user = pusher.subscribe('user.' + $scope.user.id);\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t    channel.user.bindings = [\r\n\t\t\t\t    channel.user.bind('App\\\\Events\\\\PusherTaskCreated', function(data) {\r\n\t\t\t\t    \tfetchUnreadNotifications();\r\n\t\t\t\t    \tvar message = data.sender.name + ' created a new task.';\r\n\t\t\t\t    \tPreloader.newNotification(message);\r\n\t\t\t\t\t\t$scope.$broadcast('refresh');\r\n\t\t\t\t    }),\r\n\r\n\t\t\t\t    channel.user.bind('App\\\\Events\\\\PusherSpreadsheetCreated', function(data) {\r\n\t\t\t\t    \tfetchUnreadNotifications();\r\n\t\t\t\t    \tvar message = data.sender.name + ' created a new sheet.';\r\n\t\t\t\t    \tPreloader.newNotification(message);\r\n\t\t\t\t\t\t$scope.$broadcast('refresh');\r\n\t\t\t\t    }),\r\n\r\n\t\t\t\t    channel.user.bind('App\\\\Events\\\\PusherTaskAssignedToDesigner', function(data) {\r\n\t\t\t\t    \tfetchUnreadNotifications();\r\n\t\t\t\t    \tvar message = data.sender.name + ' assigned a task for ' + data.data.name + '.';\r\n\t\t\t\t    \tPreloader.newNotification(message);\r\n\t\t\t\t\t\t$scope.$broadcast('refresh');\r\n\t\t\t\t    }),\r\n\r\n\t\t\t\t    channel.user.bind('App\\\\Events\\\\PusherDesignerTaskStart', function(data) {\r\n\t\t\t\t    \tfetchUnreadNotifications();\r\n\t\t\t\t    \tvar message = data.sender.name + ' started to work on ' + data.data.file_name + '.';\r\n\t\t\t\t    \tPreloader.newNotification(message);\r\n\t\t\t\t\t\t$scope.$broadcast('refresh');\r\n\t\t\t\t    }),\r\n\r\n\t\t\t\t    channel.user.bind('App\\\\Events\\\\PusherTaskDeleted', function(data) {\r\n\t\t\t\t    \tfetchUnreadNotifications();\r\n\t\t\t\t    \tvar message = data.sender.name + ' deleted a task.';\r\n\t\t\t\t    \tPreloader.newNotification(message);\r\n\t\t\t\t\t\t$scope.$broadcast('refresh');\r\n\t\t\t\t    }),\r\n\r\n\t\t\t\t    channel.user.bind('App\\\\Events\\\\PusherDesignerTaskDecline', function(data) {\r\n\t\t\t\t    \tfetchUnreadNotifications();\r\n\t\t\t\t    \tvar message = data.sender.name + ' declined to work on ' + data.data.file_name + '.';\r\n\t\t\t\t    \tPreloader.newNotification(message);\r\n\t\t\t\t\t\t$scope.$broadcast('refresh');\r\n\t\t\t\t    }),\r\n\r\n\t\t\t\t     channel.user.bind('App\\\\Events\\\\PusherForQC', function(data) {\r\n\t\t\t\t    \tfetchUnreadNotifications();\r\n\t\t\t\t    \tvar message = data.sender.name + ' submitted a task for quality control.';\r\n\t\t\t\t    \tPreloader.newNotification(message);\r\n\t\t\t\t\t\t$scope.$broadcast('refresh');\r\n\t\t\t\t    }),\r\n\r\n\t\t\t\t    channel.user.bind('App\\\\Events\\\\PusherQualityControlTaskStart', function(data) {\r\n\t\t\t\t    \tfetchUnreadNotifications();\r\n\t\t\t\t    \tvar message = data.sender.name + ' started to work on ' + data.data.file_name + '.';\r\n\t\t\t\t    \tPreloader.newNotification(message);\r\n\t\t\t\t\t\t$scope.$broadcast('refresh');\r\n\t\t\t\t    }),\r\n\r\n\t\t\t\t    channel.user.bind('App\\\\Events\\\\PusherMarkAsComplete', function(data) {\r\n\t\t\t\t    \tfetchUnreadNotifications();\r\n\t\t\t\t    \tvar message = data.sender.name + ' marked ' + data.data.file_name + ' as complete.';\r\n\t\t\t\t    \tPreloader.newNotification(message);\r\n\t\t\t\t\t\t$scope.$broadcast('refresh');\r\n\t\t\t\t    }),\r\n\r\n\t\t\t\t    channel.user.bind('App\\\\Events\\\\PusherTaskRework', function(data) {\r\n\t\t\t\t    \tfetchUnreadNotifications();\r\n\t\t\t\t    \tvar message = data.sender.name + ' marked ' + data.data.file_name + ' as rework.';\r\n\t\t\t\t    \tPreloader.newNotification(message);\r\n\t\t\t\t\t\t$scope.$broadcast('refresh');\r\n\t\t\t\t    }),\r\n\r\n\t\t\t\t    channel.user.bind('App\\\\Events\\\\PusherNotifyComment', function(data) {\r\n\t\t\t\t    \tfetchUnreadNotifications();\r\n\t\t\t\t    \tvar message = data.sender.name + ' commented on a task on ' + data.data.file_name + '.';\r\n\t\t\t\t    \tPreloader.newNotification(message);\r\n\t\t\t\t    \t$scope.$broadcast('refresh');\r\n\t\t\t\t    }),\r\n\r\n\t\t\t\t    channel.user.bind('App\\\\Events\\\\PusherDesignerRevisionStart', function(data) {\r\n\t\t\t\t    \tfetchUnreadNotifications();\r\n\t\t\t\t    \tvar message = data.sender.name + ' started to revise ' + data.data.file_name + '.';\r\n\t\t\t\t    \tPreloader.newNotification(message);\r\n\t\t\t\t\t\t$scope.$broadcast('refresh');\r\n\t\t\t\t    }),\r\n\t\t\t    ];\r\n\t\t\t})\r\n\t}]);","sharedModule\r\n\t.controller('sharedNotificationsContentContainerController', ['$scope', '$filter', '$state', 'Preloader', 'Notification', 'User', function($scope, $filter, $state, Preloader, Notification, User){\r\n\t\t$scope.$on('refresh', function(){\r\n\t\t\t$scope.init();\r\n\t\t});\r\n\r\n\t\t$scope.toolbar = {};\r\n\r\n\t\t$scope.toolbar.childState = 'Notifications';\r\n\r\n\t\t$scope.toolbar.getItems = function(query){\r\n\t\t\t$scope.showInactive = true;\r\n\t\t\tvar results = query ? $filter('filter')($scope.toolbar.items, query) : $scope.toolbar.items;\r\n\t\t\treturn results;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.notification.busy = true;\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.notification.busy = false;\r\n\t\t\t$scope.searchBar = false;\r\n\t\t\t$scope.toolbar.searchText = '';\r\n\t\t\t$scope.toolbar.searchItem = '';\r\n\t\t};\r\n\r\n\t\tvar pushItem = function(notif){\r\n\t\t\tnotif.data = JSON.parse(notif.data);\r\n\t\t\tnotif.first_letter = notif.data.sender.name.charAt(0).toUpperCase();\r\n\t\t\tnotif.sender = notif.data.sender.name;\r\n\t\t\tnotif.created_at = new Date(notif.created_at);\r\n\r\n\t\t\tif(notif.type == 'App\\\\Notifications\\\\TaskCreated'){\r\n\t\t\t\tnotif.message = 'created a new task.';\r\n\t\t\t\tnotif.task_id = notif.data.attachment.task_id;\r\n\t\t\t}\r\n\t\t\telse if(notif.type == 'App\\\\Notifications\\\\SpreadsheetCreated'){\r\n\t\t\t\tnotif.message = 'created a new sheet.';\r\n\t\t\t\tnotif.task_id = notif.data.attachment.id\r\n\t\t\t}\r\n\r\n\t\t\telse if(notif.type == 'App\\\\Notifications\\\\TaskAssignedToDesigner'){\r\n\t\t\t\tnotif.message = 'assigned a task for ' + notif.data.attachment.designer.name + '.';\r\n\t\t\t\tnotif.task_id = notif.data.attachment.task_id;\r\n\t\t\t}\r\n\r\n\t\t\telse if(notif.type == 'App\\\\Notifications\\\\DesignerTaskStart'){\r\n\t\t\t\tnotif.message = 'started to work on ' + notif.data.attachment.task.file_name + '.';\r\n\t\t\t\tnotif.task_id = notif.data.attachment.task_id;\r\n\t\t\t}\r\n\r\n\t\t\telse if(notif.type == 'App\\\\Notifications\\\\TaskDeleted'){\r\n\t\t\t\tnotif.message = 'deleted a task.';\r\n\t\t\t\tnotif.task_id = notif.data.attachment.task_id;\r\n\t\t\t}\r\n\r\n\t\t\telse if(notif.type == 'App\\\\Notifications\\\\DesignerTaskDecline'){\r\n\t\t\t\tnotif.message = 'declined to work on ' + notif.data.attachment.task.file_name + '.';\r\n\t\t\t\tnotif.task_id = notif.data.attachment.task_id;\r\n\t\t\t}\r\n\r\n\t\t\telse if(notif.type == 'App\\\\Notifications\\\\ForQC'){\r\n\t\t\t\tnotif.message = 'submitted a task for quality control.';\r\n\t\t\t\tnotif.task_id = notif.data.attachment.id;\r\n\t\t\t}\r\n\r\n\t\t\telse if(notif.type == 'App\\\\Notifications\\\\QualityControlTaskStart'){\r\n\t\t\t\tnotif.message = 'started to work on ' + notif.data.attachment.task.file_name + '.';\r\n\t\t\t\tnotif.task_id = notif.data.attachment.task_id;\r\n\t\t\t}\r\n\r\n\t\t\telse if(notif.type == 'App\\\\Notifications\\\\MarkAsComplete'){\r\n\t\t\t\tnotif.message = 'marked ' + notif.data.attachment.task.file_name + ' as complete.';\r\n\t\t\t\tnotif.task_id = notif.data.attachment.task_id;\r\n\t\t\t}\r\n\r\n\t\t\telse if(notif.type == 'App\\\\Notifications\\\\TaskRework'){\r\n\t\t\t\tnotif.message = 'marked ' + notif.data.attachment.task.file_name + ' as rework.';\r\n\t\t\t\tnotif.task_id = notif.data.attachment.task_id;\r\n\t\t\t}\r\n\r\n\t\t\telse if(notif.type == 'App\\\\Notifications\\\\NotifyComment'){\r\n\t\t\t\tnotif.message = 'commented on a task on ' + notif.data.attachment.file_name + '.';\r\n\t\t\t\tnotif.task_id = notif.data.attachment.id;\r\n\t\t\t}\r\n\r\n\t\t\telse if(notif.type == 'App\\\\Notifications\\\\DesignerRevisionStart'){\r\n\t\t\t\tnotif.message = 'started to revise ' + notif.data.attachment.task.file_name + '.';\r\n\t\t\t\tnotif.task_id = notif.data.attachment.task_id;\r\n\t\t\t}\r\n\r\n\t\t\t/* Designers */\r\n\t\t\telse if(notif.type == 'App\\\\Notifications\\\\NotifyDesignerForNewTask'){\r\n\t\t\t\tnotif.message = 'assigned a task for you.';\r\n\t\t\t\tnotif.task_id = notif.data.attachment.task_id;\r\n\t\t\t}\r\n\r\n\t\t\telse if(notif.type == 'App\\\\Notifications\\\\NotifyDesignerForCompleteTask'){\r\n\t\t\t\tnotif.message = 'marked your task ' + notif.data.attachment.file_name + ' as complete.';\r\n\t\t\t\tnotif.task_id = notif.data.attachment.id;\r\n\t\t\t}\r\n\r\n\t\t\telse if(notif.type == 'App\\\\Notifications\\\\NotifyComment'){\r\n\t\t\t\tnotif.message = 'commented on your task on ' + notif.data.attachment.file_name + '.';\r\n\t\t\t\tnotif.task_id = notif.data.attachment.id;\r\n\t\t\t}\r\n\r\n\t\t\telse if(notif.type == 'App\\\\Notifications\\\\NotifyDesignerForTaskRework'){\r\n\t\t\t\tnotif.message = 'marked your task ' + notif.data.attachment.file_name + ' as rework.';\r\n\t\t\t\tnotif.task_id = notif.data.attachment.id;\r\n\t\t\t}\r\n\r\n\t\t\tvar item = {\r\n\t\t\t\t'display': notif.sender,\r\n\t\t\t\t'message': notif.message,\r\n\t\t\t\t'file_name': notif.data.attachment.file_name ? notif.data.attachment.file_name : null,\r\n\t\t\t}\r\n\r\n\t\t\t$scope.toolbar.items.push(item);\r\n\t\t}\r\n\r\n\t\t$scope.init = function(){\r\n\t\t\tvar request = {\r\n\t\t\t\t'paginate': 20,\r\n\t\t\t}\r\n\r\n\t\t\t$scope.notification = {};\r\n\t\t\t$scope.notification.items = [];\r\n\t\t\t$scope.toolbar.items = [];\r\n\r\n\t\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t\t$scope.notification.page = 2;\r\n\r\n\t\t\tNotification.paginate(request)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\tif(!data)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$scope.notification.show = true;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t$scope.notification.details = data;\r\n\t\t\t\t\t$scope.notification.items = data.data;\r\n\t\t\t\t\t$scope.notification.show = true;\r\n\r\n\t\t\t\t\t// Hides inactive records\r\n\t\t\t\t\t$scope.showInactive = false;\r\n\r\n\t\t\t\t\tif(data.data.length){\r\n\t\t\t\t\t\t// iterate over each record and set the updated_at date and first letter\r\n\t\t\t\t\t\tangular.forEach(data.data, function(item){\r\n\t\t\t\t\t\t\tpushItem(item);\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$scope.notification.paginateLoad = function(){\r\n\t\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\t\tif($scope.notification.busy || ($scope.notification.page > $scope.notification.details.last_page)){\r\n\t\t\t\t\t\t\t$scope.isLoading = false;\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t\t *\r\n\t\t\t\t\t\t*/\r\n\t\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t\t$scope.notification.busy = true;\r\n\t\t\t\t\t\t$scope.isLoading = true;\r\n\t\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\t\tNotification.paginate(request, $scope.notification.page)\r\n\t\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t\t$scope.notification.page++;\r\n\r\n\t\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\t\tangular.forEach(data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t\tpushItem(item);\r\n\t\t\t\t\t\t\t\t\t$scope.notification.items.push(item);\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t\t$scope.notification.busy = false;\r\n\t\t\t\t\t\t\t\t$scope.isLoading = false;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t};\r\n\r\n\t\t$scope.init();\r\n\t}]);","sharedModule\r\n\t.controller('sheetsContentContainerController', ['$scope', '$filter', '$state', 'Preloader', 'Spreadsheet', function($scope, $filter, $state, Preloader, Spreadsheet){\r\n\t\t$scope.toolbar = {};\r\n\r\n\t\t$scope.toolbar.childState = 'Sheets';\r\n\r\n\t\t$scope.toolbar.getItems = function(query){\r\n\t\t\t$scope.showInactive = true;\r\n\t\t\tvar results = query ? $filter('filter')($scope.toolbar.items, query) : $scope.toolbar.items;\r\n\t\t\treturn results;\r\n\t\t}\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.sheet.busy = true;\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.sheet.busy = false;\r\n\t\t\t$scope.searchBar = false;\r\n\t\t\t$scope.toolbar.searchText = '';\r\n\t\t\t$scope.toolbar.searchItem = '';\r\n\t\t\t$scope.showInactive = false;\r\n\t\t\t/* Cancels the paginate when the user sent a query */\r\n\t\t\tif($scope.searched){\r\n\t\t\t\t$scope.sheet.page = 1;\r\n\t\t\t\t$scope.sheet.no_matches = false;\r\n\t\t\t\t$scope.sheet.items = [];\r\n\t\t\t\t$scope.searched = false;\r\n\r\n\t\t\t\t$scope.init();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for fab\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.fab = {};\r\n\r\n\t\t$scope.fab.icon = 'mdi-upload';\r\n\t\t$scope.fab.label = 'Upload';\r\n\t\t$scope.fab.action = function(){\r\n\t\t\t$state.go('main.upload');\r\n\t\t};\r\n\r\n\t\t$scope.fab.show = true;\r\n\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\r\n\t\t$scope.subheader.show = true;\r\n\r\n\t\t$scope.subheader.sort = [\r\n\t\t\t{\r\n\t\t\t\t'label': 'Tasks Number',\r\n\t\t\t\t'type': 'first_letter',\r\n\t\t\t\t'sortReverse': false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'label': 'Recently added',\r\n\t\t\t\t'type': 'created_at',\r\n\t\t\t\t'sortReverse': false,\r\n\t\t\t},\r\n\t\t];\r\n\r\n\t\t$scope.subheader.refresh = function(){\r\n\t\t\t$scope.isLoading = true;\r\n  \t\t\t$scope.sheet.show = false;\r\n\r\n  \t\t\t$scope.init();\r\n\t\t}\r\n\r\n\t\t$scope.subheader.toggleActive = function(){\r\n\t\t\t$scope.showInactive = !$scope.showInactive;\r\n\t\t}\r\n\r\n\t\t$scope.subheader.sortBy = function(filter){\r\n\t\t\tfilter.sortReverse = !filter.sortReverse;\t\t\t\r\n\t\t\t$scope.sortType = filter.type;\r\n\t\t\t$scope.sortReverse = filter.sortReverse;\r\n\t\t}\r\n\r\n\t\tvar pushItem = function(item){\r\n\t\t\titem.updated_at = new Date(item.updated_at);\r\n\t\t\titem.first_letter = item.tasks.length\r\n\t\t}\r\n\r\n\t\t$scope.init = function(request)\r\n\t\t{\r\n\t\t\t$scope.sheet = {};\r\n\t\t\t$scope.sheet.items = [];\r\n\r\n\t\t\tif($scope.searched)\r\n\t\t\t{\r\n\t\t\t\t$scope.searchBar = false;\r\n\t\t\t\t$scope.toolbar.searchText = '';\r\n\t\t\t\t$scope.toolbar.searchItem = '';\r\n\t\t\t\t$scope.sheet.page = 1;\r\n\t\t\t\t$scope.sheet.no_matches = false;\r\n\t\t\t\t$scope.searched = false;\r\n\t\t\t}\r\n\r\n\t\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t\t$scope.sheet.page = 2;\r\n\r\n\t\t\tSpreadsheet.paginate(request)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.sheet.details = data;\r\n\t\t\t\t\t$scope.sheet.items = data.data;\r\n\t\t\t\t\t$scope.sheet.show = true;\r\n\r\n\t\t\t\t\t/* Fab */\r\n\t\t\t\t\t$scope.fab.show = true;\r\n\r\n\t\t\t\t\t// Hides inactive records\r\n\t\t\t\t\t$scope.showInactive = false;\r\n\r\n\t\t\t\t\tif(data.data.length){\r\n\t\t\t\t\t\t// iterate over each record and set the updated_at date and first letter\r\n\t\t\t\t\t\tangular.forEach(data.data, function(item){\r\n\t\t\t\t\t\t\tpushItem(item);\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$scope.sheet.paginateLoad = function(){\r\n\t\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\t\tif($scope.sheet.busy || ($scope.sheet.page > $scope.sheet.details.last_page)){\r\n\t\t\t\t\t\t\t$scope.isLoading = false;\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t\t *\r\n\t\t\t\t\t\t*/\r\n\t\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t\t$scope.sheet.busy = true;\r\n\t\t\t\t\t\t$scope.isLoading = true;\r\n\t\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\t\tSetting.paginate(request, $scope.sheet.page)\r\n\t\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t\t$scope.sheet.page++;\r\n\r\n\t\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\t\tangular.forEach(data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t\tpushItem(item);\r\n\t\t\t\t\t\t\t\t\t$scope.sheet.items.push(item);\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t\t$scope.sheet.busy = false;\r\n\t\t\t\t\t\t\t\t$scope.isLoading = false;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\t$scope.init();\r\n\t}]);","sharedModule\t\r\n\t.controller('taskContentContainerController', ['$scope', '$mdDialog', '$state', '$stateParams', 'Preloader', 'Task', 'DesignerAssigned', 'Rework', 'QualityControlAssigned', 'Comment', 'User', function($scope, $mdDialog, $state, $stateParams, Preloader, Task, DesignerAssigned, Rework, QualityControlAssigned, Comment, User){\r\n\t\tvar taskID = $stateParams.taskID;\r\n\r\n\t\t$scope.toolbar = {};\r\n\r\n\t\t$scope.toolbar.hideSearchIcon = true;\r\n\r\n\t\t$scope.comment = {};\r\n\t\t$scope.comment.task_id = taskID;\r\n\r\n\t\t$scope.$on('refresh', function(){\r\n\t\t\t$scope.init();\r\n\t\t});\r\n\r\n\t\t/* Designer actions */\r\n\t\t// check the user if he has pending works before executing this\r\n\t\t$scope.start = function()\r\n\t\t{\r\n\t\t\tvar dialog = {\r\n\t\t\t\t'title': 'Start',\r\n\t\t\t\t'message': 'Start working on this task?',\r\n\t\t\t\t'ok': 'start',\r\n\t\t\t\t'cancel': 'cancel',\r\n\t\t\t};\r\n\r\n\t\t\tPreloader.confirm(dialog)\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\tPreloader.preload();\r\n\t\t\t\t\tDesignerAssigned.start($scope.task)\r\n\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t\t\t$scope.init();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\t$scope.decline = function()\r\n\t\t{\r\n\t\t\tvar query = {\r\n\t\t\t\t'title': 'Decline task',\r\n\t\t\t\t'message': 'This task will be removed from the list.',\r\n\t\t\t\t'ok': 'Decline',\r\n\t\t\t\t'cancel': 'Cancel',\r\n\t\t\t}\r\n\r\n\t\t\tPreloader.confirm(query)\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\tPreloader.preload();\r\n\t\t\t\t\tDesignerAssigned.decline($scope.task)\r\n\t\t\t\t\t\t.success(function(){\r\n\t\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t\t\t$state.go('main.tracker');\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t}\r\n\t\t\r\n\t\t$scope.forQC = function()\r\n\t\t{\r\n\t\t\tvar dialog = {\r\n\t\t\t\t'message': 'Submit task for quality control?',\r\n\t\t\t\t'ok': 'Continue',\r\n\t\t\t\t'cancel': 'Cancel',\r\n\t\t\t};\r\n\r\n\t\t\tif(!$scope.task.reworks.length)\r\n\t\t\t{\r\n\t\t\t\tdialog.title = 'For QC';\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdialog.title = 'For QC Revised';\r\n\t\t\t}\r\n\r\n\t\t\tPreloader.confirm(dialog)\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\tPreloader.preload();\r\n\t\t\t\t\tif(!$scope.task.reworks.length)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tDesignerAssigned.forQC($scope.task)\r\n\t\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t\t\t\t$scope.init();\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tRework.forQC($scope.task)\r\n\t\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t\t\t\t$scope.init();\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\t$scope.revision = function()\r\n\t\t{\r\n\t\t\tvar dialog = {\r\n\t\t\t\t'title': 'Revise',\r\n\t\t\t\t'message': 'Start revising this task?',\r\n\t\t\t\t'ok': 'Revise',\r\n\t\t\t\t'cancel': 'Cancel',\r\n\t\t\t};\r\n\r\n\t\t\tPreloader.confirm(dialog)\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\tPreloader.preload();\r\n\t\t\t\t\tRework.revise($scope.task)\r\n\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t\t\t$scope.init();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\t$scope.pass = function()\r\n\t\t{\r\n\t\t\tvar dialog = {\r\n\t\t\t\t'title': 'Pass',\r\n\t\t\t\t'message': 'Have other people continue this revision?',\r\n\t\t\t\t'ok': 'Pass',\r\n\t\t\t\t'cancel': 'Cancel',\r\n\t\t\t};\r\n\r\n\t\t\tPreloader.confirm(dialog)\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\tPreloader.preload();\r\n\t\t\t\t\tRework.pass($scope.task)\r\n\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t\t\t$state.go('main.tracker');\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\t/* Admin QC Actions */\r\n\t\t$scope.assign = function()\r\n\t\t{\r\n\t\t\t$scope.task.include = true;\r\n\t\t\tPreloader.set([$scope.task]);\r\n\t\t\t$mdDialog.show({\r\n\t\t      \tcontroller: 'assignTasksDialogController',\r\n\t\t      \ttemplateUrl: '/app/shared/templates/dialogs/assign-tasks-dialog.template.html',\r\n\t\t      \tparent: angular.element(document.body),\r\n\t\t      \tfullscreen: true,\r\n\t\t    })\r\n\t\t    .then(function(){\r\n\t\t    \t$scope.init();\r\n\t\t    }, function(){\r\n\t\t    \treturn;\r\n\t\t    })\r\n\t\t}\r\n\t\t\r\n\t\t$scope.reassign = function()\r\n\t\t{\r\n\t\t\t$scope.task.include = true;\r\n\t\t\tPreloader.set($scope.task);\r\n\t\t\t$mdDialog.show({\r\n\t\t      \tcontroller: 'reassignTasksDialogController',\r\n\t\t      \ttemplateUrl: '/app/shared/templates/dialogs/reassign-tasks-dialog.template.html',\r\n\t\t      \tparent: angular.element(document.body),\r\n\t\t      \tfullscreen: true,\r\n\t\t    })\r\n\t\t    .then(function(){\r\n\t\t    \t$scope.init();\r\n\t\t    }, function(){\r\n\t\t    \treturn;\r\n\t\t    })\r\n\t\t}\r\n\r\n\t\t$scope.delete = function()\r\n\t\t{\r\n\t\t\tvar query = {\r\n\t\t\t\t'title': 'Delete task',\r\n\t\t\t\t'message': 'This task will be removed from the list.',\r\n\t\t\t\t'ok': 'Delete',\r\n\t\t\t\t'cancel': 'Cancel',\r\n\t\t\t}\r\n\r\n\t\t\tPreloader.confirm(query)\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\tPreloader.preload();\r\n\t\t\t\t\tTask.delete(taskID)\r\n\t\t\t\t\t\t.success(function(){\r\n\t\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t\t\t$state.go('main.tracker');\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\t$scope.startQC = function()\r\n\t\t{\r\n\t\t\tvar dialog = {\r\n\t\t\t\t'title': 'Start',\r\n\t\t\t\t'message': 'Start working on this task?',\r\n\t\t\t\t'ok': 'start',\r\n\t\t\t\t'cancel': 'cancel',\r\n\t\t\t};\r\n\r\n\t\t\tPreloader.confirm(dialog)\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\tPreloader.preload();\r\n\t\t\t\t\tif(!$scope.task.reworks.length)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tQualityControlAssigned.store($scope.task)\r\n\t\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t\t\t\t$scope.init();\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tRework.startQC($scope.task)\r\n\t\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t\t\t\t$scope.init();\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\t$scope.complete = function()\r\n\t\t{\r\n\t\t\tvar dialog = {\r\n\t\t\t\t'title': 'Complete',\r\n\t\t\t\t'message': 'Mark this task as complete?',\r\n\t\t\t\t'ok': 'complete',\r\n\t\t\t\t'cancel': 'cancel',\r\n\t\t\t};\r\n\r\n\t\t\tPreloader.confirm(dialog)\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\tPreloader.preload();\r\n\t\t\t\t\tif(!$scope.task.reworks.length)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tQualityControlAssigned.complete($scope.task)\r\n\t\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t\t\t\t$scope.init();\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tRework.complete($scope.task)\r\n\t\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t\t\t\t$scope.init();\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\t$scope.rework = function()\r\n\t\t{\r\n\t\t\tvar dialog = {\r\n\t\t\t\t'title': 'Rework',\r\n\t\t\t\t'placeholder': 'Comment',\r\n\t\t\t\t'message': 'Tell ' + $scope.task.designer_assigned.designer.name + ' how can he improve his work.',\r\n\t\t\t\t'ok': 'comment',\r\n\t\t\t\t'cancel': 'cancel',\r\n\t\t\t};\r\n\r\n\t\t\tPreloader.prompt(dialog)\r\n\t\t\t\t.then(function(message){\r\n\t\t\t\t\tif(!message){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tPreloader.preload();\r\n\r\n\t\t\t\t\tvar comment = {};\r\n\t\t\t\t\tcomment.task_id = taskID;\r\n\t\t\t\t\tcomment.message = message;\r\n\t\t\t\t\tif($scope.task.quality_control_assigned.time_end)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcomment.rework = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tComment.store(comment)\r\n\t\t\t\t\t\t.success(function(){\r\n\t\t\t\t\t\t\tif(!$scope.task.quality_control_assigned.time_end)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tQualityControlAssigned.rework($scope.task)\r\n\t\t\t\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t\t\t\t\t\t$scope.init();\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\tRework.rework($scope.task)\r\n\t\t\t\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t\t\t\t\t\t$scope.init();\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t}, function(){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\tif($scope.comment.message)\r\n\t\t\t{\r\n\t\t\t\t$scope.busy = true;\r\n\t\t\t\tif($scope.task.quality_control_assigned.time_end)\r\n\t\t\t\t{\r\n\t\t\t\t\t$scope.comment.rework = true;\r\n\t\t\t\t}\r\n\t\t\t\tComment.store($scope.comment)\r\n\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t$scope.comment.message = null;\r\n\t\t\t\t\t\t$scope.comment.rework = false;\r\n\t\t\t\t\t\t$scope.init();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t$scope.busy = false;\r\n\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$scope.init = function(){\r\n\t\t\tvar query = {\r\n\t\t\t\t'withTrashed': true,\r\n\t\t\t\t'with': [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'relation' : 'category',\r\n\t\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'relation' : 'client',\r\n\t\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'relation': 'designer_assigned',\r\n\t\t\t\t\t\t'withTrashed': false,\r\n\t\t\t\t\t\t'with': [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t'relation' : 'designer',\r\n\t\t\t\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'relation': 'quality_control_assigned',\r\n\t\t\t\t\t\t'withTrashed': false,\r\n\t\t\t\t\t\t'with': [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t'relation' : 'quality_control',\r\n\t\t\t\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'relation': 'reworks',\r\n\t\t\t\t\t\t'withTrashed': false,\r\n\t\t\t\t\t\t'with': [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t'relation' : 'designer',\r\n\t\t\t\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t'relation' : 'quality_control',\r\n\t\t\t\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'relation' : 'comments',\r\n\t\t\t\t\t\t'withTrashed': false,\r\n\t\t\t\t\t\t'with': [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t'relation': 'user',\r\n\t\t\t\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t\t'where': [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'label':'id',\r\n\t\t\t\t\t\t'condition':'=',\r\n\t\t\t\t\t\t'value':taskID,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t};\r\n\r\n\t\t\tUser.pending()\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\tif(!data)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$scope.hasPending = false;\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\t$scope.current = data;\r\n\t\t\t\t\t\t$scope.hasPending = data == taskID ? false: true;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\tTask.enlist(query)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.unauthorized = false;\r\n\t\t\t\t\tif(data.designer_assigned)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(data.designer_assigned.designer.id != $scope.user.id && $scope.user.role == 'designer')\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$scope.unauthorized = true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdata.designer_assigned.time_start = data.designer_assigned.time_start ? new Date(data.designer_assigned.time_start) : null;\r\n\t\t\t\t\t\tdata.designer_assigned.time_end = data.designer_assigned.time_end ? new Date(data.designer_assigned.time_end) : null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(data.quality_control_assigned)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(data.quality_control_assigned.quality_control.id != $scope.user.id && $scope.user.role == 'quality_control')\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t$scope.unauthorized = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdata.quality_control_assigned.time_start = data.quality_control_assigned.time_start ? new Date(data.quality_control_assigned.time_start) : null;\r\n\t\t\t\t\t\tdata.quality_control_assigned.time_end = data.quality_control_assigned.time_end ? new Date(data.quality_control_assigned.time_end) : null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(data.comments.length)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tangular.forEach(data.comments, function(comment){\r\n\t\t\t\t\t\t\tcomment.first_letter = comment.user.name.charAt(0).toUpperCase();\r\n\t\t\t\t\t\t\tcomment.created_at = new Date(comment.created_at);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(data.reworks.length)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$scope.under_qc = false;\r\n\t\t\t\t\t\t$scope.under_revision = false;\r\n\t\t\t\t\t\tangular.forEach(data.reworks, function(rework){\r\n\t\t\t\t\t\t\trework.designer_time_start =  rework.designer_time_start ? new Date(rework.designer_time_start) : null;\r\n\t\t\t\t\t\t\trework.designer_time_end =  rework.designer_time_end ? new Date(rework.designer_time_end) : null;\r\n\t\t\t\t\t\t\trework.quality_control_time_start =  rework.quality_control_time_start ? new Date(rework.quality_control_time_start) : null;\r\n\t\t\t\t\t\t\trework.quality_control_time_end =  rework.quality_control_time_end ? new Date(rework.quality_control_time_end) : null;\r\n\r\n\t\t\t\t\t\t\t$scope.under_revision = rework.designer_time_start && !rework.designer_time_end ? true : false;\r\n\t\t\t\t\t\t\t$scope.under_qc = rework.quality_control_time_start && !rework.quality_control_time_end ? true : false;\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t$scope.authorized_designer_id = data.reworks[data.reworks.length-1].designer_id ? data.reworks[data.reworks.length-1].designer_id : $scope.user.id;\r\n\t\t\t\t\t\t$scope.authorized_quality_control_id = data.reworks[data.reworks.length-1].quality_control_id ? data.reworks[data.reworks.length-1].quality_control_id : $scope.user.id;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$scope.task = data;\r\n\t\t\t\t\t$scope.busy = false;\r\n\t\t\t\t\t$scope.task.first_letter = data.file_name.charAt(0).toUpperCase();\r\n\t\t\t\t\t$scope.task.category = data.category.name;\r\n\t\t\t\t\t$scope.task.client = data.client.name;\r\n\t\t\t\t\t$scope.toolbar.childState = data.file_name;\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\t$scope.init();\r\n\t}]);","sharedModule\r\n\t.controller('trackerContentContainerController', ['$scope', '$state', '$filter', '$timeout', '$mdDialog', '$mdToast', '$mdBottomSheet', '$mdMedia', 'Preloader', 'Category', 'Client', 'Task', 'User', function($scope, $state, $filter, $timeout, $mdDialog, $mdToast, $mdBottomSheet, $mdMedia, Preloader, Category, Client, Task, User){\r\n\t\t$scope.toolbar = {};\r\n\r\n\t\t$scope.toolbar.childState = 'Tracker';\r\n\r\n\t\t$scope.toolbar.getItems = function(query){\r\n\t\t\t$scope.showInactive = true;\r\n\t\t\tvar results = query ? $filter('filter')($scope.toolbar.items, query) : $scope.toolbar.items;\r\n\t\t\treturn results;\r\n\t\t}\r\n\t\t$scope.toolbar.searchAll = true;\r\n\r\n\t\t$scope.$on('refresh', function(){\r\n\t\t\t$scope.init($scope.subheader.current.request);\r\n\t\t});\r\n\t\t\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.task.busy = true;\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.task.busy = false;\r\n\t\t\t$scope.searchBar = false;\r\n\t\t\t$scope.toolbar.searchText = '';\r\n\t\t\t$scope.toolbar.searchItem = '';\r\n\t\t\t$scope.showInactive = false;\r\n\t\t\t/* Cancels the paginate when the user sent a query */\r\n\t\t\tif($scope.searched){\r\n\t\t\t\t$scope.task.page = 1;\r\n\t\t\t\t$scope.task.no_matches = false;\r\n\t\t\t\t$scope.task.items = [];\r\n\t\t\t\t$scope.searched = false;\r\n\r\n\t\t\t\t$scope.init($scope.subheader.current.request);\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t$scope.searchUserInput = function(){\r\n\t\t\t$scope.isLoading = true;\r\n  \t\t\t$scope.task.show = false;\r\n  \t\t\t$scope.searched = true;\r\n  \t\t\t$scope.init($scope.subheader.current.request, true);\r\n\t\t};\r\n\r\n\t\tvar createTask = function(){\r\n\t\t\t$mdDialog.show({\r\n\t\t      \tcontroller: 'createTasksDialogController',\r\n\t\t      \ttemplateUrl: '/app/components/admin/templates/dialogs/create-task-dialog.template.html',\r\n\t\t      \tparent: angular.element(document.body),\r\n\t\t      \tfullscreen: true,\r\n\t\t    })\r\n\t\t     .then(function(data) {\r\n\t\t     \tpushItem(data);\r\n\t\t    \t$scope.task.busy = true;\r\n\t\t\t    /* Refreshes the list*/\r\n      \t\t\tvar message = 'A new task has been created.';\r\n\t\t\t    Preloader.notify(message)\r\n\t\t\t    \t.then(function(){\r\n\t\t\t\t     \t$scope.task.busy = false;\r\n\t\t\t    \t})\r\n\t\t    }, function() {\r\n\t\t    \treturn;\r\n\t\t    });\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Object for fab\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.fab = {};\r\n\r\n\t\t$scope.fab.icon = 'mdi-plus';\r\n\t\t$scope.fab.label = 'Task';\r\n\t\t$scope.fab.action = createTask;\r\n\r\n\t\t/* Sets up the page for what tab it is*/\r\n\t\tvar setInit = function(nav){\r\n\t\t\t$scope.subheader.current = nav;\r\n\r\n\t\t\t$scope.toolbar.items = [];\r\n\t\t\t\r\n\t\t\t$scope.init($scope.subheader.current.request);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Object for subheader\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.subheader = {};\r\n\r\n\t\t$scope.subheader.show = true;\r\n\r\n\t\t$scope.subheader.navs = [\r\n\t\t\t{\r\n\t\t\t\t'label':'Pending',\r\n\t\t\t\t'request': {\r\n\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t'with': [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation' : 'category',\r\n\t\t\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation' : 'client',\r\n\t\t\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation': 'designer_assigned',\r\n\t\t\t\t\t\t\t'withTrashed': false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t\t'where': [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'label':'status',\r\n\t\t\t\t\t\t\t'condition': '=',\r\n\t\t\t\t\t\t\t'value': 'pending',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t\t'paginate': 20,\r\n\t\t\t\t},\r\n\t\t\t\taction: function(current){\r\n\t\t\t\t\tsetInit(current);\r\n\t\t\t\t},\r\n\t\t\t\t'menu': [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'label': 'Assign multiple',\r\n\t\t\t\t\t\t'icon': 'mdi-tag-multiple',\r\n\t\t\t\t\t\taction: function(){\r\n\t\t\t\t\t\t\t$scope.selectMultiple = true;\r\n\t\t\t\t\t\t\t$scope.fab.label = 'Assign';\r\n\t\t\t\t\t\t\t$scope.fab.icon = this.icon;\r\n\t\t\t\t\t\t\t$scope.fab.action = function(){\r\n\t\t\t\t\t\t\t\tPreloader.set($scope.task.items);\r\n\t\t\t\t\t\t\t\t$mdDialog.show({\r\n\t\t\t\t\t\t\t      \tcontroller: 'assignTasksDialogController',\r\n\t\t\t\t\t\t\t      \ttemplateUrl: '/app/shared/templates/dialogs/assign-tasks-dialog.template.html',\r\n\t\t\t\t\t\t\t      \tparent: angular.element(document.body),\r\n\t\t\t\t\t\t\t      \tfullscreen: true,\r\n\t\t\t\t\t\t\t    })\r\n\t\t\t\t\t\t\t    .then(function(){\r\n\t\t\t\t\t\t\t    \t$scope.selectMultiple = false;\r\n\t\t\t\t\t\t\t    \t$scope.fab.label = 'Task';\r\n\t\t\t\t\t\t\t\t\t$scope.fab.icon = 'mdi-plus';\r\n\t\t\t\t\t\t\t\t\t$scope.fab.action = createTask;\r\n\r\n\t\t\t\t\t\t\t\t\t$scope.subheader.refresh();\r\n\t\t\t\t\t\t\t    })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'label':'In Progress',\r\n\t\t\t\t'request': {\r\n\t\t\t\t\t'with': [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation' : 'category',\r\n\t\t\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation' : 'client',\r\n\t\t\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation': 'designer_assigned',\r\n\t\t\t\t\t\t\t'withTrashed': false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t\t'where': [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'label':'status',\r\n\t\t\t\t\t\t\t'condition': '=',\r\n\t\t\t\t\t\t\t'value': 'in_progress',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t\t'paginate': 20,\r\n\t\t\t\t},\r\n\t\t\t\taction: function(current){\r\n\t\t\t\t\tsetInit(current);\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'label':'For QC',\r\n\t\t\t\t'request': {\r\n\t\t\t\t\t'with': [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation' : 'category',\r\n\t\t\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation' : 'client',\r\n\t\t\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation': 'quality_control_assigned',\r\n\t\t\t\t\t\t\t'withTrashed': false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t\t'where': [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'label':'status',\r\n\t\t\t\t\t\t\t'condition': '=',\r\n\t\t\t\t\t\t\t'value': 'for_qc',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t\t'paginate': 20,\r\n\t\t\t\t},\r\n\t\t\t\taction: function(current){\r\n\t\t\t\t\tsetInit(current);\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'label':'Rework',\r\n\t\t\t\t'request': {\r\n\t\t\t\t\t'with': [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation' : 'category',\r\n\t\t\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation' : 'client',\r\n\t\t\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation': 'designer_assigned',\r\n\t\t\t\t\t\t\t'withTrashed': false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation': 'quality_control_assigned',\r\n\t\t\t\t\t\t\t'withTrashed': false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t\t'where': [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'label':'status',\r\n\t\t\t\t\t\t\t'condition': '=',\r\n\t\t\t\t\t\t\t'value': 'rework',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t\t'paginate': 20,\r\n\t\t\t\t},\r\n\t\t\t\taction: function(current){\r\n\t\t\t\t\tsetInit(current);\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'label':'Complete',\r\n\t\t\t\t'request': {\r\n\t\t\t\t\t'with': [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation' : 'category',\r\n\t\t\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation' : 'client',\r\n\t\t\t\t\t\t\t'withTrashed': true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation': 'designer_assigned',\r\n\t\t\t\t\t\t\t'withTrashed': false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'relation': 'quality_control_assigned',\r\n\t\t\t\t\t\t\t'withTrashed': false,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t\t'where': [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t'label':'status',\r\n\t\t\t\t\t\t\t'condition': '=',\r\n\t\t\t\t\t\t\t'value': 'complete',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t\t'paginate': 20,\r\n\t\t\t\t},\r\n\t\t\t\taction: function(current){\r\n\t\t\t\t\tsetInit(current);\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t];\r\n\r\n\t\t$scope.subheader.sort = [\r\n\t\t\t{\r\n\t\t\t\t'label': 'File Name',\r\n\t\t\t\t'type': 'file_name',\r\n\t\t\t\t'sortReverse': false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'label': 'Category',\r\n\t\t\t\t'type': 'category',\r\n\t\t\t\t'sortReverse': false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'label': 'Delivery Date',\r\n\t\t\t\t'type': 'delivery_date',\r\n\t\t\t\t'sortReverse': false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'label': 'Live Date',\r\n\t\t\t\t'type': 'live_date',\r\n\t\t\t\t'sortReverse': false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'label': 'Recently added',\r\n\t\t\t\t'type': 'created_at',\r\n\t\t\t\t'sortReverse': false,\r\n\t\t\t},\r\n\t\t];\r\n\r\n\t\t$scope.subheader.cancelSelectMultiple = function(){\r\n\t\t\t$scope.selectMultiple = false;\r\n\t\t\t$scope.fab.label = 'Task';\r\n\t\t\t$scope.fab.icon = 'mdi-plus';\r\n\t\t\t$scope.fab.action = createTask;\r\n\r\n\t\t\tangular.forEach($scope.task.items, function(item){\r\n\t\t\t\titem.include = false;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.subheader.refresh = function(){\r\n\t\t\t$scope.isLoading = true;\r\n  \t\t\t$scope.task.show = false;\r\n\r\n  \t\t\t$scope.init($scope.subheader.current.request);\r\n\t\t}\r\n\r\n\t\t$scope.subheader.toggleActive = function(){\r\n\t\t\t$scope.showInactive = !$scope.showInactive;\r\n\t\t}\r\n\r\n\t\t$scope.subheader.sortBy = function(filter){\r\n\t\t\tfilter.sortReverse = !filter.sortReverse;\t\t\t\r\n\t\t\t$scope.sortType = filter.type;\r\n\t\t\t$scope.sortReverse = filter.sortReverse;\r\n\t\t}\r\n\r\n\t\t$scope.subheader.setCategoryFilter = function(filter){\r\n\t\t\tif($scope.categoryFilter == filter)\r\n\t\t\t{\r\n\t\t\t\treturn $scope.categoryFilter = '';\r\n\t\t\t}\r\n\r\n\t\t\t$scope.categoryFilter = filter;\r\n\t\t}\r\n\r\n\t\t$scope.subheader.setClientFilter = function(filter){\r\n\t\t\tif($scope.clientFilter == filter)\r\n\t\t\t{\r\n\t\t\t\treturn $scope.clientFilter = '';\r\n\t\t\t}\r\n\r\n\t\t\t$scope.clientFilter = filter;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Object for rightSidenav\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.rightSidenav = {};\r\n\r\n\t\t$scope.rightSidenav.show = false;\r\n\r\n\t\tvar pushItem = function(item){\r\n\t\t\titem.first_letter = item.file_name.charAt(0).toUpperCase();\r\n\t\t\titem.created_at = new Date(item.created_at);\r\n\t\t\titem.updated_at = new Date(item.updated_at);\r\n\t\t\titem.delivery_date = new Date(item.delivery_date);\r\n\t\t\titem.live_date = new Date(item.live_date);\r\n\t\t\titem.deleted_at = item.deleted_at ? new Date(item.deleted_at) : null;\r\n\t\t\titem.category = item.category.name;\r\n\t\t\titem.client = item.client.name;\r\n\r\n\t\t\tvar filter = {};\r\n\t\t\tfilter.display = item.file_name;\r\n\r\n\t\t\t$scope.toolbar.items.push(filter);\r\n\t\t}\r\n\r\n\t\t$scope.init = function(request, searched){\r\n\t\t\tCategory.index()\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.categories = data;\r\n\t\t\t\t})\r\n\r\n\t\t\tClient.index()\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.clients = data;\r\n\t\t\t\t})\r\n\r\n\t\t\t$scope.task = {};\r\n\t\t\t$scope.task.items = [];\r\n\t\t\t$scope.toolbar.items = [];\r\n\r\n\t\t\tif(searched)\r\n\t\t\t{\r\n\t  \t\t\trequest.searchText = $scope.toolbar.searchText;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t$scope.searchBar = false;\r\n\t\t\t\t$scope.toolbar.searchText = '';\r\n\t\t\t\t$scope.toolbar.searchItem = '';\r\n\t\t\t\t$scope.task.page = 1;\r\n\t\t\t\t$scope.task.no_matches = false;\r\n\t\t\t\t$scope.searched = false;\r\n\t\t\t\trequest.searchText = null;\r\n\t\t\t}\r\n\r\n\t\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t\t$scope.task.page = 2;\r\n\r\n\t\t\tTask.paginate(request)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\tif(!data)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$scope.task.show = true;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t$scope.task.details = data;\r\n\t\t\t\t\t$scope.task.items = data.data;\r\n\t\t\t\t\t$scope.task.show = true;\r\n\r\n\t\t\t\t\t/* Fab */\r\n\t\t\t\t\t$scope.fab.show = true;\r\n\r\n\t\t\t\t\t// Hides inactive records\r\n\t\t\t\t\t$scope.showInactive = false;\r\n\r\n\t\t\t\t\tif(data.data.length){\r\n\t\t\t\t\t\t// iterate over each record and set the updated_at date and first letter\r\n\t\t\t\t\t\tangular.forEach(data.data, function(item){\r\n\t\t\t\t\t\t\tpushItem(item);\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$scope.task.paginateLoad = function(){\r\n\t\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\t\tif($scope.task.busy || ($scope.task.page > $scope.task.details.last_page)){\r\n\t\t\t\t\t\t\t$scope.isLoading = false;\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t\t *\r\n\t\t\t\t\t\t*/\r\n\t\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t\t$scope.task.busy = true;\r\n\t\t\t\t\t\t$scope.isLoading = true;\r\n\t\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\t\tTask.paginate(request, $scope.task.page)\r\n\t\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t\t$scope.task.page++;\r\n\r\n\t\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\t\tangular.forEach(data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t\tpushItem(item);\r\n\t\t\t\t\t\t\t\t\t$scope.task.items.push(item);\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t\t$scope.task.busy = false;\r\n\t\t\t\t\t\t\t\t$scope.isLoading = false;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t};\r\n\r\n\t\t$scope.subheader.currentNavItem = $scope.subheader.navs[0].label;\r\n\t\t\r\n\t\t/* Sets up the page for what tab it is*/\r\n\t\tsetInit($scope.subheader.navs[0]);\r\n\r\n\t}]);","sharedModule\r\n\t.controller('uploadContentContainerController', ['$scope', '$filter', '$mdDialog', '$state', 'FileUploader', 'Preloader', 'Spreadsheet', 'Task', function($scope, $filter, $mdDialog, $state, FileUploader, Preloader, Spreadsheet, Task){\r\n\t\t$scope.toolbar = {};\r\n\t\t$scope.form = {};\r\n\r\n\t\t$scope.toolbar.items = [];\r\n\t\t$scope.toolbar.childState = 'Upload Sheet';\r\n\r\n\t\t$scope.toolbar.getItems = function(query){\r\n\t\t\t$scope.showInactive = true;\r\n\t\t\tvar results = query ? $filter('filter')($scope.toolbar.items, query) : $scope.toolbar.items;\r\n\t\t\treturn results;\r\n\t\t}\r\n\t\t/**\r\n\t\t * Reveals the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.showSearchBar = function(){\r\n\t\t\t$scope.searchBar = true;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Hides the search bar.\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.hideSearchBar = function(){\r\n\t\t\t$scope.toolbar.searchText = '';\r\n\t\t\t$scope.toolbar.searchItem = '';\r\n\t\t\t$scope.searchBar = false;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Object for fab\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.fab = {};\r\n\r\n\t\t$scope.fab.icon = 'mdi-check';\r\n\t\t$scope.fab.label = 'Upload';\r\n\r\n\t\tvar uploader = {};\r\n\r\n\t\tuploader.filter = {\r\n            name: 'excelFilter',\r\n            fn: function(item /*{File|FileLikeObject}*/, options) {\r\n                var type = '|' + item.type.slice(item.type.lastIndexOf('/') + 1) + '|';\r\n                return '|vnd.openxmlformats-officedocument.spreadsheetml.sheet|vnd.ms-excel|'.indexOf(type) !== -1;\r\n            }\r\n        };\r\n\r\n        uploader.error = function(item /*{File|FileLikeObject}*/, filter, options) {\r\n            $scope.fileError = true;\r\n            $scope.excelUploader.queue = [];\r\n        };\r\n\r\n        uploader.headers = { 'X-CSRF-TOKEN': document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content')};\r\n\r\n\t\t/* Question Uploader */\r\n\t\t$scope.excelUploader = new FileUploader({\r\n\t\t\turl: '/spreadsheet',\r\n\t\t\theaders: uploader.headers,\r\n\t\t\tqueueLimit : 1\r\n\t\t})\r\n\t\t// FILTERS\r\n        $scope.excelUploader.filters.push(uploader.filter);\r\n        \r\n\t\t$scope.excelUploader.onWhenAddingFileFailed = uploader.error;\r\n\t\t$scope.excelUploader.onAfterAddingFile  = function(){\r\n\t\t\t$scope.fileError = false;\r\n\t\t\tif($scope.excelUploader.queue.length)\r\n\t\t\t{\t\r\n\t\t\t\t$scope.excelUploader.uploadAll()\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$scope.checkDuplicate = function(data){\r\n\t\t\tvar nextLoop = true;\r\n\t\t\tvar idx = $scope.tasks.indexOf(data);\r\n\t\t\tvar duplicate = false;\r\n\t\t\t// checks for duplicate file name within the form.\r\n\t\t\tangular.forEach($scope.tasks, function(task, key){\r\n\t\t\t\tif(nextLoop && key != idx){\r\n\t\t\t\t\tconsole.log(data.file_name == task.file_name);\r\n\t\t\t\t\tif(data.file_name == task.file_name){\r\n\t\t\t\t\t\tduplicate = true;\r\n\t\t\t\t\t\tnextLoop = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif(duplicate){\r\n\t\t\t\treturn data.duplicate = true;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tdata.duplicate = false;\r\n\t\t\t}\r\n\r\n\t\t\tPreloader.checkDuplicate('task', data)\r\n\t\t\t\t.success(function(bool){\r\n\t\t\t\t\tdata.duplicate = bool;\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.remove = function(data){\r\n\t\t\tvar confirm = $mdDialog.confirm()\r\n\t\t        .title('Remove')\r\n\t\t        .textContent('Remove ' + data.file_name + ' from the list?')\r\n\t\t        .ariaLabel('Remove')\r\n\t\t        .ok('Remove')\r\n\t\t        .cancel('Cancel');\r\n\r\n\t\t    $mdDialog.show(confirm).then(function() {\r\n\t\t      \tvar idx = $scope.tasks.indexOf(data);\r\n\t\t\t\t$scope.tasks.splice(idx, 1);\r\n\t\t    }, function() {\r\n\t\t      \treturn;\r\n\t\t    });\r\n\r\n\t\t}\r\n\r\n\t\tvar pushItem = function(data){\r\n\t\t\tangular.forEach(data, function(item, idx){\r\n\t\t\t\tvar nextLoop = true;\r\n\t\t\t\t// compare current item with other items on the array\r\n\t\t\t\tangular.forEach(data, function(other, key){\r\n\t\t\t\t\tif(nextLoop && idx != key)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(item.file_name == other.file_name){\r\n\t\t\t\t\t\t\titem.duplicate = true;\r\n\t\t\t\t\t\t\tnextLoop = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\titem.delivery_date = new Date(item.delivery_date);\r\n\t\t\t\titem.live_date = new Date(item.live_date);\r\n\t\t\t\t$scope.tasks.push(item);\r\n\r\n\t\t\t\tvar filter = {};\r\n\r\n\t\t\t\tfilter.display = item.file_name;\r\n\r\n\t\t\t\t$scope.toolbar.items.push(filter);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.excelUploader.onCompleteItem  = function(data, response){\t\t\t\r\n\t\t\tSpreadsheet.read(response.id)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.tasks = [];\r\n\r\n\t\t\t\t\tif(Array.isArray(data[0]))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tangular.forEach(data, function(sheet){\r\n\t\t\t\t\t\t\tangular.forEach(sheet, function(item){\r\n\t\t\t\t\t\t\t\titem.spreadsheet_id = response.id;\r\n\t\t\t\t\t\t\t\t$scope.tasks.push(item);\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tangular.forEach(data, function(item){\r\n\t\t\t\t\t\t\titem.spreadsheet_id = response.id;\r\n\t\t\t\t\t\t\t$scope.tasks.push(item);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tTask.checkDuplicateMultiple($scope.tasks)\r\n\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\tpushItem(data);\r\n\t\t\t\t\t\t\t$scope.tasks = data;\r\n\t\t\t\t\t\t\t$scope.show = true;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t$scope.fab.show = true;\r\n\t\t\t\t})\r\n\t\t\t\t.error(function(){\r\n\t\t\t\t\tPreloader.error();\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\tvar busy = false;\r\n\t\tvar duplicate = false;\t\r\n\r\n\t\t$scope.fab.action = function(){\r\n\t\t\tif($scope.form.taskForm.$invalid){\r\n\t\t\t\tangular.forEach($scope.form.taskForm.$error, function(field){\r\n\t\t\t\t\tangular.forEach(field, function(errorField){\r\n\t\t\t\t\t\terrorField.$setTouched();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tangular.forEach($scope.tasks, function(item){\r\n\t\t\t\tif(item.duplicate){\r\n\t\t\t\t\tPreloader.alert('Duplicate File Name', item.file_name +' already exists.');\r\n\t\t\t\t\tduplicate = true;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\titem.delivery_date = item.delivery_date.toDateString();\r\n\t\t\t\t\titem.live_date = item.live_date.toDateString();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif(!busy && !duplicate){\r\n\t\t\t\tbusy = true;\r\n\t\t\t\tPreloader.preload();\r\n\r\n\t\t\t\tTask.storeMultiple($scope.tasks)\r\n\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\tbusy = false;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(data){\r\n\t\t\t\t\t\t\tangular.forEach($scope.tasks, function(item){\r\n\t\t\t\t\t\t\t\titem.delivery_date = new Date(item.delivery_date);\r\n\t\t\t\t\t\t\t\titem.live_date = new Date(item.live_date);\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t\t$state.go('main.tracker');\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\tPreloader.error()\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t}]);","sharedModule\r\n\t.factory('Category', ['$http', function($http){\r\n\t\tvar urlBase = '/category';\r\n\r\n\t\treturn {\r\n\t\t\tindex: function(){\r\n\t\t\t\treturn $http.get(urlBase);\r\n\t\t\t},\r\n\t\t\tshow: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '/' +id);\r\n\t\t\t},\r\n\t\t\tstore: function(data){\r\n\t\t\t\treturn $http.post(urlBase, data);\r\n\t\t\t},\r\n\t\t\tupdate: function(id, data){\r\n\t\t\t\treturn $http.put(urlBase + '/' + id, data);\r\n\t\t\t},\r\n\t\t\tdelete: function(id){\r\n\t\t\t\treturn $http.delete(urlBase + '/' + id);\r\n\t\t\t},\r\n\t\t\tcheckDuplicate: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '/check-duplicate', data);\r\n\t\t\t},\r\n\t\t}\r\n\t}]);","sharedModule\r\n\t.factory('Client', ['$http', function($http){\r\n\t\tvar urlBase = '/client';\r\n\r\n\t\treturn {\r\n\t\t\tindex: function(){\r\n\t\t\t\treturn $http.get(urlBase);\r\n\t\t\t},\r\n\t\t\tshow: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '/' +id);\r\n\t\t\t},\r\n\t\t\tstore: function(data){\r\n\t\t\t\treturn $http.post(urlBase, data);\r\n\t\t\t},\r\n\t\t\tupdate: function(id, data){\r\n\t\t\t\treturn $http.put(urlBase + '/' + id, data);\r\n\t\t\t},\r\n\t\t\tdelete: function(id){\r\n\t\t\t\treturn $http.delete(urlBase + '/' + id);\r\n\t\t\t},\r\n\t\t}\r\n\t}]);","sharedModule\r\n\t.factory('Comment', ['$http', function($http){\r\n\t\tvar urlBase = '/comment';\r\n\r\n\t\treturn {\r\n\t\t\tindex: function(){\r\n\t\t\t\treturn $http.get(urlBase);\r\n\t\t\t},\r\n\t\t\tshow: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '/' +id);\r\n\t\t\t},\r\n\t\t\tstore: function(data){\r\n\t\t\t\treturn $http.post(urlBase, data);\r\n\t\t\t},\r\n\t\t\tupdate: function(id, data){\r\n\t\t\t\treturn $http.put(urlBase + '/' + id, data);\r\n\t\t\t},\r\n\t\t\tdelete: function(id){\r\n\t\t\t\treturn $http.delete(urlBase + '/' + id);\r\n\t\t\t},\r\n\t\t}\r\n\t}]);","sharedModule\r\n\t.factory('DesignerAssigned', ['$http', function($http){\r\n\t\tvar urlBase = '/designer-assigned';\r\n\r\n\t\treturn {\r\n\t\t\tindex: function(){\r\n\t\t\t\treturn $http.get(urlBase);\r\n\t\t\t},\r\n\t\t\tshow: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '/' +id);\r\n\t\t\t},\r\n\t\t\tstore: function(data){\r\n\t\t\t\treturn $http.post(urlBase, data);\r\n\t\t\t},\r\n\t\t\tupdate: function(id, data){\r\n\t\t\t\treturn $http.put(urlBase + '/' + id, data);\r\n\t\t\t},\r\n\t\t\tdelete: function(id){\r\n\t\t\t\treturn $http.delete(urlBase + '/' + id);\r\n\t\t\t},\r\n\t\t\tpaginate: function(data, page)\r\n\t\t\t{\r\n\t\t\t\treturn $http.post(urlBase + '/paginate?page=' + page, data);\r\n\t\t\t},\r\n\t\t\tstart: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '/start', data);\r\n\t\t\t},\r\n\t\t\tdecline: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '/decline', data);\r\n\t\t\t},\r\n\t\t\tforQC: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '/for-qc', data);\r\n\t\t\t},\r\n\t\t}\r\n\t}]);","sharedModule\r\n\t.factory('Notification', ['$http', function($http){\r\n\t\tvar urlBase = '/notification';\r\n\r\n\t\treturn {\r\n\t\t\tindex: function(){\r\n\t\t\t\treturn $http.get(urlBase);\r\n\t\t\t},\r\n\t\t\tshow: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '/' +id);\r\n\t\t\t},\r\n\t\t\tstore: function(data){\r\n\t\t\t\treturn $http.post(urlBase, data);\r\n\t\t\t},\r\n\t\t\tupdate: function(id, data){\r\n\t\t\t\treturn $http.put(urlBase + '/' + id, data);\r\n\t\t\t},\r\n\t\t\tdelete: function(id){\r\n\t\t\t\treturn $http.delete(urlBase + '/' + id);\r\n\t\t\t},\r\n\t\t\tmarkAsRead: function(id){\r\n\t\t\t\treturn $http.post(urlBase + '/mark-as-read/' + id);\r\n\t\t\t},\r\n\t\t\tmarkAllAsRead: function(){\r\n\t\t\t\treturn $http.post(urlBase + '/mark-all-as-read');\r\n\t\t\t},\r\n\t\t\tpaginate: function(data, page){\r\n\t\t\t\tif(!page)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn $http.post(urlBase + '/paginate', data);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn $http.post(urlBase + '/paginate?page=' + page, data);\r\n\t\t\t}\r\n\t\t}\r\n\t}]);","sharedModule\r\n\t.factory('QualityControlAssigned', ['$http', function($http){\r\n\t\tvar urlBase = '/quality-control-assigned';\r\n\r\n\t\treturn {\r\n\t\t\tindex: function(){\r\n\t\t\t\treturn $http.get(urlBase);\r\n\t\t\t},\r\n\t\t\tshow: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '/' +id);\r\n\t\t\t},\r\n\t\t\tstore: function(data){\r\n\t\t\t\treturn $http.post(urlBase, data);\r\n\t\t\t},\r\n\t\t\tupdate: function(id, data){\r\n\t\t\t\treturn $http.put(urlBase + '/' + id, data);\r\n\t\t\t},\r\n\t\t\tdelete: function(id){\r\n\t\t\t\treturn $http.delete(urlBase + '/' + id);\r\n\t\t\t},\r\n\t\t\tcomplete: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '/complete', data);\r\n\t\t\t},\r\n\t\t\trework: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '/rework', data);\r\n\t\t\t},\r\n\t\t}\r\n\t}]);","sharedModule\r\n\t.factory('QualityControlTask', ['$http', function($http){\r\n\t\tvar urlBase = '/quality-control-task';\r\n\r\n\t\treturn {\r\n\t\t\tindex: function(){\r\n\t\t\t\treturn $http.get(urlBase);\r\n\t\t\t},\r\n\t\t\tshow: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '/' +id);\r\n\t\t\t},\r\n\t\t\tstore: function(data){\r\n\t\t\t\treturn $http.post(urlBase, data);\r\n\t\t\t},\r\n\t\t\tupdate: function(id, data){\r\n\t\t\t\treturn $http.put(urlBase + '/' + id, data);\r\n\t\t\t},\r\n\t\t\tdelete: function(id){\r\n\t\t\t\treturn $http.delete(urlBase + '/' + id);\r\n\t\t\t},\r\n\t\t}\r\n\t}]);","sharedModule\r\n\t.factory('Rework', ['$http', function($http){\r\n\t\tvar urlBase = '/rework';\r\n\r\n\t\treturn {\r\n\t\t\tindex: function(){\r\n\t\t\t\treturn $http.get(urlBase);\r\n\t\t\t},\r\n\t\t\tshow: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '/' +id);\r\n\t\t\t},\r\n\t\t\tstore: function(data){\r\n\t\t\t\treturn $http.post(urlBase, data);\r\n\t\t\t},\r\n\t\t\tupdate: function(id, data){\r\n\t\t\t\treturn $http.put(urlBase + '/' + id, data);\r\n\t\t\t},\r\n\t\t\tdelete: function(id){\r\n\t\t\t\treturn $http.delete(urlBase + '/' + id);\r\n\t\t\t},\r\n\t\t\trevise: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '/revise', data);\r\n\t\t\t},\r\n\t\t\tforQC: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '/for-qc', data);\r\n\t\t\t},\r\n\t\t\tstartQC: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '/start-qc', data);\r\n\t\t\t},\r\n\t\t\tcomplete: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '/complete', data);\r\n\t\t\t},\r\n\t\t\tpass: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '/pass', data);\r\n\t\t\t},\r\n\t\t\trework: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '/rework', data);\r\n\t\t\t},\r\n\t\t}\r\n\t}]);","sharedModule\r\n\t.factory('Spreadsheet', ['$http', function($http){\r\n\t\tvar urlBase = '/spreadsheet';\r\n\r\n\t\treturn {\r\n\t\t\tindex: function(){\r\n\t\t\t\treturn $http.get(urlBase);\r\n\t\t\t},\r\n\t\t\tshow: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '/' +id);\r\n\t\t\t},\r\n\t\t\tstore: function(data){\r\n\t\t\t\treturn $http.post(urlBase, data);\r\n\t\t\t},\r\n\t\t\tupdate: function(id, data){\r\n\t\t\t\treturn $http.put(urlBase + '/' + id, data);\r\n\t\t\t},\r\n\t\t\tdelete: function(id){\r\n\t\t\t\treturn $http.delete(urlBase + '/' + id);\r\n\t\t\t},\r\n\t\t\tread: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '/read/' + id);\r\n\t\t\t},\r\n\t\t\tpaginate: function(request, page){\r\n\t\t\t\treturn $http.post(urlBase + '/paginate?page=' + page, request);\r\n\t\t\t},\r\n\t\t}\r\n\t}]);","sharedModule\r\n\t.factory('Task', ['$http', function($http){\r\n\t\tvar urlBase = '/task';\r\n\r\n\t\treturn {\r\n\t\t\tindex: function(){\r\n\t\t\t\treturn $http.get(urlBase);\r\n\t\t\t},\r\n\t\t\tshow: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '/' +id);\r\n\t\t\t},\r\n\t\t\tstore: function(data){\r\n\t\t\t\treturn $http.post(urlBase, data);\r\n\t\t\t},\r\n\t\t\tupdate: function(id, data){\r\n\t\t\t\treturn $http.put(urlBase + '/' + id, data);\r\n\t\t\t},\r\n\t\t\tdelete: function(id){\r\n\t\t\t\treturn $http.delete(urlBase + '/' + id);\r\n\t\t\t},\r\n\t\t\tpaginate: function(data, page){\r\n\t\t\t\tif(!page)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn $http.post(urlBase + '/paginate', data);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn $http.post(urlBase + '/paginate?page=' + page, data);\r\n\t\t\t},\r\n\t\t\tstoreMultiple: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '/store-multiple', data);\r\n\t\t\t},\r\n\t\t\tcheckDuplicateMultiple: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '/check-duplicate-multiple', data);\r\n\t\t\t},\r\n\t\t\tenlist: function(data, page){\r\n\t\t\t\tif(!page)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn $http.post(urlBase + '/enlist', data);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn $http.post(urlBase + '/enlist?page=' + page, data);\r\n\t\t\t},\r\n\t\t}\r\n\t}]);","sharedModule\r\n\t.factory('User', ['$http', function($http){\r\n\t\tvar urlBase = '/user';\r\n\r\n\t\treturn {\r\n\t\t\tindex: function(){\r\n\t\t\t\treturn $http.get(urlBase);\r\n\t\t\t},\r\n\t\t\tshow: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '/' +id);\r\n\t\t\t},\r\n\t\t\tstore: function(data){\r\n\t\t\t\treturn $http.post(urlBase, data);\r\n\t\t\t},\r\n\t\t\tupdate: function(id, data){\r\n\t\t\t\treturn $http.put(urlBase + '/' + id, data);\r\n\t\t\t},\r\n\t\t\tdelete: function(id){\r\n\t\t\t\treturn $http.delete(urlBase + '/' + id);\r\n\t\t\t},\r\n\r\n\t\t\t/* checks authenticated user */\r\n\t\t\tcheck: function(query){\r\n\t\t\t\treturn $http.post(urlBase + '/check', query);\r\n\t\t\t},\r\n\t\t\t/* logout authenticated user */\r\n\t\t\tlogout: function(){\r\n\t\t\t\treturn $http.post(urlBase + '/logout');\r\n\t\t\t},\r\n\t\t\t/* checks if email is in use */\r\n\t\t\tcheckEmail: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '/check-email', data);\r\n\t\t\t},\r\n\t\t\t/* checks old password is the same with new password */\r\n\t\t\tcheckPassword: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '/check-password', data);\r\n\t\t\t},\r\n\t\t\t/* changes password of authenticated user */\r\n\t\t\tchangePassword: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '/change-password', data);\r\n\t\t\t},\r\n\t\t\t/* resets passwords of specific user */\r\n\t\t\tresetPassword: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '/reset-password', data);\r\n\t\t\t},\r\n\t\t\tpaginate: function(page){\r\n\t\t\t\treturn $http.get(urlBase + '/paginate?page=' + page);\r\n\t\t\t},\r\n\t\t\tdisable: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '/disable', data);\r\n\t\t\t},\r\n\t\t\tmarkAsRead: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '/mark-as-read/' + id);\r\n\t\t\t},\r\n\t\t\tenlist: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '/enlist', data);\r\n\t\t\t},\r\n\t\t\tpending: function(){\r\n\t\t\t\treturn $http.post(urlBase + '/pending');\r\n\t\t\t},\r\n\t\t}\r\n\t}]);","sharedModule\r\n\t.service('Preloader', ['$mdDialog', '$mdToast', '$http', function($mdDialog, $mdToast, $http){\r\n\t\tvar dataHolder = null;\r\n\r\n\t\treturn {\r\n\t\t\tprompt: function(data)\r\n\t\t\t{\r\n\t\t\t\tvar prompt = $mdDialog.prompt()\r\n\t\t\t    \t.title(data.title)\r\n\t\t\t      \t.textContent(data.message)\r\n\t\t\t      \t.placeholder(data.placeholder)\r\n\t\t\t      \t.ariaLabel(data.title)\r\n\t\t\t      \t.ok(data.ok)\r\n\t\t\t      \t.cancel(data.cancel);\r\n\r\n\t\t\t    return $mdDialog.show(prompt);\r\n\t\t\t},\r\n\t\t\tconfirm: function(data)\r\n\t\t\t{\r\n\t\t\t\tvar confirm = $mdDialog.confirm()\r\n\t\t\t        .title(data.title)\r\n\t\t\t        .textContent(data.message)\r\n\t\t\t        .ariaLabel(data.title)\r\n\t\t\t        .ok(data.ok)\r\n\t\t\t        .cancel(data.cancel);\r\n\r\n\t\t\t    return $mdDialog.show(confirm);\r\n\t\t\t},\r\n\t\t\talert: function(title, message){\r\n\t\t\t\t$mdDialog.show(\r\n\t\t\t\t\t$mdDialog.alert()\r\n\t\t\t\t        .parent(angular.element($('body')))\r\n\t\t\t\t        .clickOutsideToClose(true)\r\n\t\t\t\t        .title(title)\r\n\t\t\t\t        .textContent(message)\r\n\t\t\t\t        .ariaLabel(title)\r\n\t\t\t\t        .ok('Got it!')\r\n\t\t\t\t    );\r\n\t\t\t},\r\n\t\t\tnewNotification: function(message, action) {\r\n\t\t\t\tvar toast = $mdToast.simple()\r\n\t\t\t      \t.textContent(message)\r\n\t\t\t      \t.action(action)\r\n\t\t\t      \t.highlightAction(true)\r\n\t\t\t      \t.highlightClass('md-primary')// Accent is used by default, this just demonstrates the usage.\r\n\t\t\t      \t.position('bottom right');\r\n\r\n\t\t\t    var audio = new Audio('/audio/notif.mp3')\r\n\t\t\t    audio.play();\r\n\t\t\t    \r\n\t\t\t    return $mdToast.show(toast);\r\n\t\t\t},\r\n\t\t\t/* Notifies a user with a message */\r\n\t\t\tnotify: function(message){\r\n\t\t\t\treturn $mdToast.show(\r\n\t\t\t    \t$mdToast.simple()\r\n\t\t\t\t        .textContent(message)\r\n\t\t\t\t        .position('bottom right')\r\n\t\t\t\t        .hideDelay(3000)\r\n\t\t\t    );\r\n\t\t\t},\r\n\t\t\t/* Starts the preloader */\r\n\t\t\tpreload: function(){\r\n\t\t\t\treturn $mdDialog.show({\r\n\t\t\t\t\ttemplateUrl: '/app/shared/views/loading.html',\r\n\t\t\t\t    parent: angular.element(document.body),\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t/* Stops the preloader */\r\n\t\t\tstop: function(data){\r\n\t\t\t\treturn $mdDialog.hide(data);\r\n\t\t\t},\r\n\t\t\t/* Shows error message if AJAX failed */\r\n\t\t\terror: function(){\r\n\t\t\t\treturn $mdDialog.show(\r\n\t\t\t    \t$mdDialog.alert()\r\n\t\t\t\t        .parent(angular.element($('body')))\r\n\t\t\t\t        .clickOutsideToClose(true)\r\n\t\t\t\t        .title('Oops! Something went wrong!')\r\n\t\t\t\t        .content('An error occured. Please contact administrator for assistance.')\r\n\t\t\t\t        .ariaLabel('Error Message')\r\n\t\t\t\t        .ok('Got it!')\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\t/* Send temporary data for retrival */\r\n\t\t\tset: function(data){\r\n\t\t\t\tdataHolder = data;\r\n\t\t\t},\r\n\t\t\t/* Retrieves data */\r\n\t\t\tget: function(){\r\n\t\t\t\treturn dataHolder;\r\n\t\t\t},\r\n\t\t\tcheckDuplicate: function(urlBase, data){\r\n\t\t\t\treturn $http.post(urlBase + '/check-duplicate', data);\r\n\t\t\t},\r\n\t\t};\r\n\t}]);","sharedModule\r\n\t.service('Setting', ['$http', '$mdToast', function($http, $mdToast){\r\n\t\treturn {\r\n\t\t\tpaginate: function(type, page){\r\n\t\t\t\tvar urlBase = type == 'Categories' ? 'category' : (type == 'Clients' ? 'client' : (type == 'Designers' ? 'user/designers' : 'user/quality_control'));\r\n\r\n\t\t\t\treturn $http.post(urlBase + '/paginate?page=' + page);\r\n\t\t\t},\r\n\t\t\tsearch: function(type, data){\r\n\t\t\t\tvar urlBase = type == 'Categories' ? 'category/enlist' : (type == 'Clients' ? 'client/enlist' : 'user/enlist');\r\n\r\n\t\t\t\treturn $http.post(urlBase, data);\r\n\t\t\t},\r\n\t\t\tsettingController: function(action, type){\r\n\t\t\t\t// removes white spaces\r\n\t\t\t\ttype = type.replace(/\\s/g, '');\r\n\t\t\t\treturn action + type + 'DialogController';\r\n\t\t\t},\r\n\t\t\tsettingDialogTemplate: function(action, type){\r\n\t\t\t\tif(type == 'Designers' || type == 'Quality Control'){\r\n\t\t\t\t\treturn action + '-users-dialog.template.html';\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// replaces white spaces with dashes and lower cases all captial letters\r\n\t\t\t\ttype = type.replace(/\\s+/g, '-').toLowerCase();\r\n\r\n\t\t\t\treturn action + '-' + type + '-dialog.template.html';\r\n\t\t\t},\r\n\t\t\tfabCreateSuccessMessage: function(type){\r\n\t\t\t\tif(type == 'Categories'){\r\n\t\t\t\t\tvar message = 'A new category has been added.'\r\n\t\t\t\t}\r\n\t\t\t\telse if(type == 'Clients'){\r\n\t\t\t\t\tvar message = 'A new client has been added.'\r\n\t\t\t\t}\r\n\t\t\t\telse if(type == 'Designers'){\r\n\t\t\t\t\tvar message = 'A new designer has been added to your team.'\r\n\t\t\t\t}\r\n\t\t\t\telse if(type == 'Quality Control'){\r\n\t\t\t\t\tvar message = 'A new quality control has been added to your team.'\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn $mdToast.show(\r\n\t\t\t    \t$mdToast.simple()\r\n\t\t\t\t        .textContent(message)\r\n\t\t\t\t        .position('bottom right')\r\n\t\t\t\t        .hideDelay(3000)\r\n\t\t\t    );\r\n\t\t\t},\r\n\t\t\tdelete: function(type, item){\r\n\t\t\t\tvar urlBase = type == 'Categories' ? 'category' : 'client';\r\n\r\n\t\t\t\treturn $http.delete(urlBase + '/' + item.id);\r\n\t\t\t}\r\n\t\t}\r\n\t}]);","sharedModule\r\n\t.controller('itemActionsBottomSheetController', ['$scope', '$mdBottomSheet', 'Preloader', function($scope, $mdBottomSheet, Preloader){\r\n\t\t$scope.type = Preloader.get();\r\n\r\n\t\t$scope.action = function(idx){\r\n\t\t\t$mdBottomSheet.hide(idx);\r\n\t\t}\r\n\t}]);","sharedModule\r\n\t.controller('assignTasksDialogController', ['$scope', '$mdDialog', 'Preloader', 'User', 'DesignerAssigned', function($scope, $mdDialog, Preloader, User, DesignerAssigned){\r\n\t\t$scope.tasks = Preloader.get();\r\n\t\t$scope.busy = false;\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.setDesigner = function(){\r\n\t\t\tangular.forEach($scope.tasks, function(task, key){\r\n\t\t\t\tif(task.include){\r\n\t\t\t\t\ttask.designer_id = $scope.designer;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tvar query = {\r\n\t\t\t'where': [\r\n\t\t\t\t{\r\n\t\t\t\t\t'label': 'role',\r\n\t\t\t\t\t'condition': '=',\r\n\t\t\t\t\t'value': 'designer',\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t}\r\n\r\n\t\tUser.enlist(query)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.users = data;\r\n\t\t\t})\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\tif($scope.assignTaskForm.$invalid){\r\n\t\t\t\tangular.forEach($scope.assignTaskForm.$error, function(field){\r\n\t\t\t\t\tangular.forEach(field, function(errorField){\r\n\t\t\t\t\t\terrorField.$setTouched();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(!$scope.busy){\r\n\t\t\t\t$scope.busy = true;\r\n\t\t\t\tDesignerAssigned.store($scope.tasks)\r\n\t\t\t\t\t.success(function(){\r\n\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}]);","sharedModule\r\n\t.controller('createCategoriesDialogController', ['$scope', '$mdDialog', 'Preloader', 'Category', function($scope, $mdDialog, Preloader, Category){\r\n\t\tvar urlBase = 'category';\r\n\t\t$scope.category = {};\r\n\t\t$scope.busy = false;\r\n\t\t$scope.duplicate = false;\r\n\r\n\t\t$scope.checkDuplicate = function(){\r\n\t\t\tPreloader.checkDuplicate(urlBase, $scope.category)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.duplicate = data;\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\tif($scope.categoryForm.$invalid){\r\n\t\t\t\tangular.forEach($scope.categoryForm.$error, function(field){\r\n\t\t\t\t\tangular.forEach(field, function(errorField){\r\n\t\t\t\t\t\terrorField.$setTouched();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(!$scope.duplicate){\r\n\t\t\t\t$scope.busy = true;\r\n\t\t\t\tCategory.store($scope.category)\r\n\t\t\t\t\t.success(function(duplicate){\r\n\t\t\t\t\t\tif(duplicate){\r\n\t\t\t\t\t\t\t$scope.busy = false;\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}]);","sharedModule\r\n\t.controller('createClientsDialogController', ['$scope', '$mdDialog', 'Preloader', 'Client', function($scope, $mdDialog, Preloader, Client){\r\n\t\tvar urlBase = 'client';\r\n\t\t$scope.client = {};\r\n\t\t$scope.busy = false;\r\n\t\t$scope.duplicate = false;\r\n\r\n\t\t$scope.checkDuplicate = function(){\r\n\t\t\tPreloader.checkDuplicate(urlBase, $scope.client)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.duplicate = data;\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\tif($scope.clientForm.$invalid){\r\n\t\t\t\tangular.forEach($scope.clientForm.$error, function(field){\r\n\t\t\t\t\tangular.forEach(field, function(errorField){\r\n\t\t\t\t\t\terrorField.$setTouched();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(!$scope.duplicate){\r\n\t\t\t\t$scope.busy = true;\r\n\t\t\t\tClient.store($scope.client)\r\n\t\t\t\t\t.success(function(duplicate){\r\n\t\t\t\t\t\tif(duplicate){\r\n\t\t\t\t\t\t\t$scope.busy = false;\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}]);","sharedModule\r\n\t.controller('createTasksDialogController', ['$scope', '$mdDialog', 'Preloader', 'Category', 'Client', 'Task', function($scope, $mdDialog, Preloader, Category, Client, Task){\r\n\t\tvar urlBase = 'task';\r\n\t\t$scope.task = {};\r\n\t\t$scope.task.delivery_date = new Date();\r\n\t\t$scope.task.live_date = new Date();\r\n\t\t$scope.busy = false;\r\n\t\t$scope.duplicate = false;\r\n\r\n\t\tCategory.index()\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.categories = data;\r\n\t\t\t})\r\n\r\n\t\tClient.index()\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.clients = data;\r\n\t\t\t})\r\n\r\n\t\t$scope.checkDuplicate = function(){\r\n\t\t\tPreloader.checkDuplicate(urlBase, $scope.task)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.duplicate = data;\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\tif($scope.taskForm.$invalid){\r\n\t\t\t\tangular.forEach($scope.taskForm.$error, function(field){\r\n\t\t\t\t\tangular.forEach(field, function(errorField){\r\n\t\t\t\t\t\terrorField.$setTouched();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(!$scope.duplicate){\r\n\t\t\t\t$scope.busy = true;\r\n\t\t\t\t\r\n\t\t\t\t$scope.task.delivery_date = $scope.task.delivery_date.toDateString();\r\n\t\t\t\t$scope.task.live_date = $scope.task.live_date.toDateString();\r\n\r\n\t\t\t\tTask.store($scope.task)\r\n\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\tif(typeof data === 'boolean'){\r\n\t\t\t\t\t\t\t$scope.busy = false;\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tPreloader.stop(data);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}]);","sharedModule\r\n\t.controller('downloadDialogController', ['$scope', '$mdDialog', '$filter', function($scope, $mdDialog, $filter){\r\n\t\t$scope.date = {};\r\n\t\t$scope.date.start = new Date();\r\n\t\t$scope.date.end = new Date();\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\tif($scope.downloadForm.$invalid){\r\n\t\t\t\tangular.forEach($scope.downloadForm.$error, function(field){\r\n\t\t\t\t\tangular.forEach(field, function(errorField){\r\n\t\t\t\t\t\terrorField.$setTouched();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tvar win = window.open('/spreadsheet-download/' + $filter('date')($scope.date.start, 'yyyy-MM-dd') + '/to/' + $filter('date')($scope.date.end, 'yyyy-MM-dd'), '_blank');\r\n\t\t\t\twin.focus();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}]);","sharedModule\r\n\t.controller('editCategoriesDialogController', ['$scope', '$mdDialog', 'Preloader', 'Category', function($scope, $mdDialog, Preloader, Category){\r\n\t\tvar urlBase = 'category';\r\n\t\t\r\n\t\tCategory.show(Preloader.get().id)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.category = data;\r\n\t\t\t\t$scope.label = data.name;\r\n\t\t\t})\r\n\r\n\t\t$scope.busy = false;\r\n\t\t$scope.duplicate = false;\r\n\r\n\t\t$scope.checkDuplicate = function(){\r\n\t\t\tPreloader.checkDuplicate(urlBase, $scope.category)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.duplicate = data;\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\tif($scope.categoryForm.$invalid){\r\n\t\t\t\tangular.forEach($scope.categoryForm.$error, function(field){\r\n\t\t\t\t\tangular.forEach(field, function(errorField){\r\n\t\t\t\t\t\terrorField.$setTouched();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(!$scope.duplicate){\r\n\t\t\t\t$scope.busy = true;\r\n\t\t\t\tCategory.update($scope.category.id, $scope.category)\r\n\t\t\t\t\t.success(function(duplicate){\r\n\t\t\t\t\t\tif(duplicate){\r\n\t\t\t\t\t\t\t$scope.busy = false;\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}]);","sharedModule\r\n\t.controller('editClientsDialogController', ['$scope', '$mdDialog', 'Preloader', 'Client', function($scope, $mdDialog, Preloader, Client){\r\n\t\tvar urlBase = 'client';\r\n\t\t\r\n\t\tClient.show(Preloader.get().id)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.client = data;\r\n\t\t\t\t$scope.label = data.name;\r\n\t\t\t})\r\n\r\n\t\t$scope.busy = false;\r\n\t\t$scope.duplicate = false;\r\n\r\n\t\t$scope.checkDuplicate = function(){\r\n\t\t\tPreloader.checkDuplicate(urlBase, $scope.client)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.duplicate = data;\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\tif($scope.clientForm.$invalid){\r\n\t\t\t\tangular.forEach($scope.clientForm.$error, function(field){\r\n\t\t\t\t\tangular.forEach(field, function(errorField){\r\n\t\t\t\t\t\terrorField.$setTouched();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(!$scope.duplicate){\r\n\t\t\t\t$scope.busy = true;\r\n\t\t\t\tClient.update($scope.client.id, $scope.client)\r\n\t\t\t\t\t.success(function(duplicate){\r\n\t\t\t\t\t\tif(duplicate){\r\n\t\t\t\t\t\t\t$scope.busy = false;\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}]);","sharedModule\r\n\t.controller('itemActionsDialogController', ['$scope', '$mdDialog', 'Preloader', function($scope, $mdDialog, Preloader){\r\n\t\t$scope.type = Preloader.get();\r\n\r\n\t\t$scope.action = function(idx){\r\n\t\t\t$mdDialog.hide(idx);\r\n\t\t}\r\n\t}]);","sharedModule\r\n\t.controller('reassignTasksDialogController', ['$scope', '$mdDialog', 'Preloader', 'User', 'DesignerAssigned', 'Rework', function($scope, $mdDialog, Preloader, User, DesignerAssigned, Rework){\r\n\t\t$scope.task = Preloader.get();\r\n\t\t$scope.designer = $scope.task.designer_assigned.designer.id;\r\n\t\t$scope.busy = false;\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.setDesigner = function(){\r\n\t\t\t$scope.task.designer_id = $scope.designer;\r\n\t\t}\r\n\r\n\t\tvar query = {\r\n\t\t\t'where': [\r\n\t\t\t\t{\r\n\t\t\t\t\t'label': 'role',\r\n\t\t\t\t\t'condition': '=',\r\n\t\t\t\t\t'value': 'designer',\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t}\r\n\r\n\t\tUser.enlist(query)\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.users = data;\r\n\t\t\t})\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\tif($scope.assignTaskForm.$invalid){\r\n\t\t\t\tangular.forEach($scope.assignTaskForm.$error, function(field){\r\n\t\t\t\t\tangular.forEach(field, function(errorField){\r\n\t\t\t\t\t\terrorField.$setTouched();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif(!$scope.busy){\r\n\t\t\t\t$scope.busy = true;\r\n\t\t\t\tif($scope.task.status != 'rework')\r\n\t\t\t\t{\r\n\t\t\t\t\tDesignerAssigned.update($scope.task.id, $scope.task)\r\n\t\t\t\t\t\t.success(function(){\r\n\t\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tRework.store($scope.task)\r\n\t\t\t\t\t\t.success(function(){\r\n\t\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t\t});\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}]);","sharedModule\r\n\t.controller('customNotificationToastController', ['$scope', '$mdToast', '$state', 'Preloader', 'Notification', function($scope, $mdToast, $state, Preloader, Notification){\r\n\t\t$scope.notification = Preloader.get();\r\n\r\n\t\tconsole.log($scope.notification);\r\n\r\n\t\t$scope.notification.first_letter = $scope.notification.sender.name.charAt(0).toUpperCase();\r\n\t\t$scope.notification.sender = $scope.notification.sender.name;\r\n\t\t$scope.notification.created_at = new Date($scope.notification.data.created_at);\r\n\t}]);"],"sourceRoot":"/source/"}