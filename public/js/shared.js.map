{"version":3,"sources":["shared.module.js","shared.routes.js","controllers/change-password-dialog.controller.js","controllers/home-page.controller.js","factories/category.factory.js","factories/client.factory.js","factories/comment.factory.js","factories/designer-assigned.factory.js","factories/notification.factory.js","factories/quality-control-assigned.factory.js","factories/quality-control-task.factory.js","factories/rework.factory.js","factories/task.factory.js","factories/user.factory.js","services/preloader.service.js","services/setting.service.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA;AACA;AACA;AACA;AACA;AACA;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"shared.js","sourcesContent":["var sharedModule = angular.module('sharedModule', [\r\n\t'ui.router',\r\n\t'ngMaterial',\r\n\t'ngMessages',\r\n\t'infinite-scroll',\r\n\t'chart.js',\r\n\t'angularMoment'\r\n]);","sharedModule\r\n\t.config(['$urlRouterProvider', '$stateProvider', '$mdThemingProvider', function($urlRouterProvider, $stateProvider, $mdThemingProvider){\r\n\t\t/* Defaul Theme Blue - Light Blue */\r\n\t\t$mdThemingProvider.theme('default')\r\n\t\t\t.primaryPalette('light-blue')\r\n\t\t\t.accentPalette('pink')\r\n\t\t\r\n\t\t/* Dark Theme - Blue */\r\n\t\t$mdThemingProvider.theme('dark', 'default')\r\n\t      \t.primaryPalette('blue')\r\n\t\t\t.dark();\r\n\r\n\t\t$urlRouterProvider\r\n\t\t\t.otherwise('/page-not-found')\r\n\t\t\t.when('', '/');\r\n\r\n\t\t$stateProvider\r\n\t\t\t.state('page-not-found',{\r\n\t\t\t\turl: '/page-not-found',\r\n\t\t\t\ttemplateUrl: '/app/shared/views/page-not-found.view.html',\r\n\t\t\t})\r\n\t}]);","sharedModule\r\n\t.controller('changePasswordDialogController', ['$scope', '$mdDialog', 'User', 'Preloader', function($scope, $mdDialog, User, Preloader){\r\n\t\t$scope.password = {};\r\n\r\n\t\t$scope.cancel = function(){\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\r\n\t\t$scope.checkPassword = function(){\r\n\t\t\tUser.checkPassword($scope.password)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.match = data;\r\n\t\t\t\t\t$scope.show = true;\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.submit = function(){\r\n\t\t\t$scope.showErrors = true;\r\n\t\t\tif($scope.changePasswordForm.$invalid){\r\n\t\t\t\tangular.forEach($scope.changePasswordForm.$error, function(field){\r\n\t\t\t\t\tangular.forEach(field, function(errorField){\r\n\t\t\t\t\t\terrorField.$setTouched();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse if($scope.password.old == $scope.password.new || $scope.password.new != $scope.password.confirm)\r\n\t\t\t{\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t$scope.busy = true;\r\n\t\t\t\tUser.changePassword($scope.password)\r\n\t\t\t\t\t.success(function(){\r\n\t\t\t\t\t\tPreloader.stop();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.error(function(){\r\n\t\t\t\t\t\tPreloader.error();\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}]);","sharedModule\r\n\t.controller('homePageController', ['$scope', function($scope){\r\n\t\t$scope.show = function(){\r\n\t\t\tangular.element(document.querySelector('.main-view')).removeClass('no-opacity');\r\n\t\t};\r\n\t}]);","sharedModule\r\n\t.factory('Category', ['$http', function($http){\r\n\t\tvar urlBase = '/category';\r\n\r\n\t\treturn {\r\n\t\t\tindex: function(){\r\n\t\t\t\treturn $http.get(urlBase);\r\n\t\t\t},\r\n\t\t\tshow: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '/' +id);\r\n\t\t\t},\r\n\t\t\tstore: function(data){\r\n\t\t\t\treturn $http.post(urlBase, data);\r\n\t\t\t},\r\n\t\t\tupdate: function(id, data){\r\n\t\t\t\treturn $http.put(urlBase + '/' + id, data);\r\n\t\t\t},\r\n\t\t\tdelete: function(id){\r\n\t\t\t\treturn $http.delete(urlBase + '/' + id);\r\n\t\t\t},\r\n\t\t\tcheckDuplicate: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '-check-duplicate', data);\r\n\t\t\t},\r\n\t\t}\r\n\t}]);","sharedModule\r\n\t.factory('Client', ['$http', function($http){\r\n\t\tvar urlBase = '/client';\r\n\r\n\t\treturn {\r\n\t\t\tindex: function(){\r\n\t\t\t\treturn $http.get(urlBase);\r\n\t\t\t},\r\n\t\t\tshow: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '/' +id);\r\n\t\t\t},\r\n\t\t\tstore: function(data){\r\n\t\t\t\treturn $http.post(urlBase, data);\r\n\t\t\t},\r\n\t\t\tupdate: function(id, data){\r\n\t\t\t\treturn $http.put(urlBase + '/' + id, data);\r\n\t\t\t},\r\n\t\t\tdelete: function(id){\r\n\t\t\t\treturn $http.delete(urlBase + '/' + id);\r\n\t\t\t},\r\n\t\t}\r\n\t}]);","sharedModule\r\n\t.factory('Comment', ['$http', function($http){\r\n\t\tvar urlBase = '/comment';\r\n\r\n\t\treturn {\r\n\t\t\tindex: function(){\r\n\t\t\t\treturn $http.get(urlBase);\r\n\t\t\t},\r\n\t\t\tshow: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '/' +id);\r\n\t\t\t},\r\n\t\t\tstore: function(data){\r\n\t\t\t\treturn $http.post(urlBase, data);\r\n\t\t\t},\r\n\t\t\tupdate: function(id, data){\r\n\t\t\t\treturn $http.put(urlBase + '/' + id, data);\r\n\t\t\t},\r\n\t\t\tdelete: function(id){\r\n\t\t\t\treturn $http.delete(urlBase + '/' + id);\r\n\t\t\t},\r\n\t\t}\r\n\t}]);","sharedModule\r\n\t.factory('DesignerAssigned', ['$http', function($http){\r\n\t\tvar urlBase = '/designer-assigned';\r\n\r\n\t\treturn {\r\n\t\t\tindex: function(){\r\n\t\t\t\treturn $http.get(urlBase);\r\n\t\t\t},\r\n\t\t\tshow: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '/' +id);\r\n\t\t\t},\r\n\t\t\tstore: function(data){\r\n\t\t\t\treturn $http.post(urlBase, data);\r\n\t\t\t},\r\n\t\t\tupdate: function(id, data){\r\n\t\t\t\treturn $http.put(urlBase + '/' + id, data);\r\n\t\t\t},\r\n\t\t\tdelete: function(id){\r\n\t\t\t\treturn $http.delete(urlBase + '/' + id);\r\n\t\t\t},\r\n\t\t}\r\n\t}]);","sharedModule\r\n\t.factory('Notification', ['$http', function($http){\r\n\t\tvar urlBase = '/notification';\r\n\r\n\t\treturn {\r\n\t\t\tindex: function(){\r\n\t\t\t\treturn $http.get(urlBase);\r\n\t\t\t},\r\n\t\t\tshow: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '/' +id);\r\n\t\t\t},\r\n\t\t\tstore: function(data){\r\n\t\t\t\treturn $http.post(urlBase, data);\r\n\t\t\t},\r\n\t\t\tupdate: function(id, data){\r\n\t\t\t\treturn $http.put(urlBase + '/' + id, data);\r\n\t\t\t},\r\n\t\t\tdelete: function(id){\r\n\t\t\t\treturn $http.delete(urlBase + '/' + id);\r\n\t\t\t},\r\n\t\t}\r\n\t}]);","sharedModule\r\n\t.factory('QualityControlAssigned', ['$http', function($http){\r\n\t\tvar urlBase = '/quality-control-assigned';\r\n\r\n\t\treturn {\r\n\t\t\tindex: function(){\r\n\t\t\t\treturn $http.get(urlBase);\r\n\t\t\t},\r\n\t\t\tshow: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '/' +id);\r\n\t\t\t},\r\n\t\t\tstore: function(data){\r\n\t\t\t\treturn $http.post(urlBase, data);\r\n\t\t\t},\r\n\t\t\tupdate: function(id, data){\r\n\t\t\t\treturn $http.put(urlBase + '/' + id, data);\r\n\t\t\t},\r\n\t\t\tdelete: function(id){\r\n\t\t\t\treturn $http.delete(urlBase + '/' + id);\r\n\t\t\t},\r\n\t\t}\r\n\t}]);","sharedModule\r\n\t.factory('QualityControlTask', ['$http', function($http){\r\n\t\tvar urlBase = '/quality-control-task';\r\n\r\n\t\treturn {\r\n\t\t\tindex: function(){\r\n\t\t\t\treturn $http.get(urlBase);\r\n\t\t\t},\r\n\t\t\tshow: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '/' +id);\r\n\t\t\t},\r\n\t\t\tstore: function(data){\r\n\t\t\t\treturn $http.post(urlBase, data);\r\n\t\t\t},\r\n\t\t\tupdate: function(id, data){\r\n\t\t\t\treturn $http.put(urlBase + '/' + id, data);\r\n\t\t\t},\r\n\t\t\tdelete: function(id){\r\n\t\t\t\treturn $http.delete(urlBase + '/' + id);\r\n\t\t\t},\r\n\t\t}\r\n\t}]);","sharedModule\r\n\t.factory('Rework', ['$http', function($http){\r\n\t\tvar urlBase = '/rework';\r\n\r\n\t\treturn {\r\n\t\t\tindex: function(){\r\n\t\t\t\treturn $http.get(urlBase);\r\n\t\t\t},\r\n\t\t\tshow: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '/' +id);\r\n\t\t\t},\r\n\t\t\tstore: function(data){\r\n\t\t\t\treturn $http.post(urlBase, data);\r\n\t\t\t},\r\n\t\t\tupdate: function(id, data){\r\n\t\t\t\treturn $http.put(urlBase + '/' + id, data);\r\n\t\t\t},\r\n\t\t\tdelete: function(id){\r\n\t\t\t\treturn $http.delete(urlBase + '/' + id);\r\n\t\t\t},\r\n\t\t}\r\n\t}]);","sharedModule\r\n\t.factory('Task', ['$http', function($http){\r\n\t\tvar urlBase = '/task';\r\n\r\n\t\treturn {\r\n\t\t\tindex: function(){\r\n\t\t\t\treturn $http.get(urlBase);\r\n\t\t\t},\r\n\t\t\tshow: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '/' +id);\r\n\t\t\t},\r\n\t\t\tstore: function(data){\r\n\t\t\t\treturn $http.post(urlBase, data);\r\n\t\t\t},\r\n\t\t\tupdate: function(id, data){\r\n\t\t\t\treturn $http.put(urlBase + '/' + id, data);\r\n\t\t\t},\r\n\t\t\tdelete: function(id){\r\n\t\t\t\treturn $http.delete(urlBase + '/' + id);\r\n\t\t\t},\r\n\t\t}\r\n\t}]);","sharedModule\r\n\t.factory('User', ['$http', function($http){\r\n\t\tvar urlBase = '/user';\r\n\r\n\t\treturn {\r\n\t\t\tindex: function(){\r\n\t\t\t\treturn $http.get(urlBase);\r\n\t\t\t},\r\n\t\t\tshow: function(id){\r\n\t\t\t\treturn $http.get(urlBase + '/' +id);\r\n\t\t\t},\r\n\t\t\tstore: function(data){\r\n\t\t\t\treturn $http.post(urlBase, data);\r\n\t\t\t},\r\n\t\t\tupdate: function(id, data){\r\n\t\t\t\treturn $http.put(urlBase + '/' + id, data);\r\n\t\t\t},\r\n\t\t\tdelete: function(id){\r\n\t\t\t\treturn $http.delete(urlBase + '/' + id);\r\n\t\t\t},\r\n\r\n\t\t\t/* checks authenticated user */\r\n\t\t\tcheck: function(){\r\n\t\t\t\treturn $http.get(urlBase + '-check');\r\n\t\t\t},\r\n\t\t\t/* logout authenticated user */\r\n\t\t\tlogout: function(){\r\n\t\t\t\treturn $http.post(urlBase + '-logout');\r\n\t\t\t},\r\n\t\t\t/* checks if email is in use */\r\n\t\t\tcheckEmail: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '-check-email', data);\r\n\t\t\t},\r\n\t\t\t/* checks old password is the same with new password */\r\n\t\t\tcheckPassword: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '-check-password', data);\r\n\t\t\t},\r\n\t\t\t/* changes password of authenticated user */\r\n\t\t\tchangePassword: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '-change-password', data);\r\n\t\t\t},\r\n\t\t\t/* resets passwords of specific user */\r\n\t\t\tresetPassword: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '-reset-password', data);\r\n\t\t\t},\r\n\t\t\tpaginate: function(page){\r\n\t\t\t\treturn $http.get(urlBase + '-paginate?page=' + page);\r\n\t\t\t},\r\n\t\t\tdisable: function(data){\r\n\t\t\t\treturn $http.post(urlBase + '-disable', data);\r\n\t\t\t}\r\n\t\t}\r\n\t}]);","sharedModule\r\n\t.service('Preloader', ['$mdDialog', '$mdToast', '$http', function($mdDialog, $mdToast, $http){\r\n\t\tvar dataHolder = null;\r\n\r\n\t\treturn {\r\n\t\t\t/* Notifies a user with a message */\r\n\t\t\tnotify: function(message){\r\n\t\t\t\treturn $mdToast.show(\r\n\t\t\t    \t$mdToast.simple()\r\n\t\t\t\t        .textContent(message)\r\n\t\t\t\t        .position('bottom right')\r\n\t\t\t\t        .hideDelay(3000)\r\n\t\t\t    );\r\n\t\t\t},\r\n\t\t\t/* Starts the preloader */\r\n\t\t\tpreload: function(){\r\n\t\t\t\treturn $mdDialog.show({\r\n\t\t\t\t\ttemplateUrl: '/app/shared/templates/loading.html',\r\n\t\t\t\t    parent: angular.element(document.body),\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t/* Stops the preloader */\r\n\t\t\tstop: function(data){\r\n\t\t\t\treturn $mdDialog.hide(data);\r\n\t\t\t},\r\n\t\t\t/* Shows error message if AJAX failed */\r\n\t\t\terror: function(){\r\n\t\t\t\treturn $mdDialog.show(\r\n\t\t\t    \t$mdDialog.alert()\r\n\t\t\t\t        .parent(angular.element($('body')))\r\n\t\t\t\t        .clickOutsideToClose(true)\r\n\t\t\t\t        .title('Oops! Something went wrong!')\r\n\t\t\t\t        .content('An error occured. Please contact administrator for assistance.')\r\n\t\t\t\t        .ariaLabel('Error Message')\r\n\t\t\t\t        .ok('Got it!')\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\t/* Send temporary data for retrival */\r\n\t\t\tset: function(data){\r\n\t\t\t\tdataHolder = data;\r\n\t\t\t},\r\n\t\t\t/* Retrieves data */\r\n\t\t\tget: function(){\r\n\t\t\t\treturn dataHolder;\r\n\t\t\t},\r\n\t\t\tcheckDuplicate: function(urlBase, data){\r\n\t\t\t\treturn $http.post(urlBase + '-check-duplicate', data);\r\n\t\t\t},\r\n\t\t};\r\n\t}]);","sharedModule\r\n\t.service('Setting', ['$http', '$mdToast', function($http, $mdToast){\r\n\t\treturn {\r\n\t\t\tpaginate: function(type, page){\r\n\t\t\t\tvar urlBase = type == 'Categories' ? 'category' : (type == 'Clients' ? 'client' : (type == 'Designers' ? 'user-designers' : 'user-quality_control'));\r\n\r\n\t\t\t\treturn $http.get(urlBase + '-paginate?page=' + page);\r\n\t\t\t},\r\n\t\t\tsearch: function(type, data){\r\n\t\t\t\tvar urlBase = type == 'Categories' ? 'category-enlist' : (type == 'Clients' ? 'client-enlist' : 'user-enlist');\r\n\r\n\t\t\t\treturn $http.post(urlBase, data);\r\n\t\t\t},\r\n\t\t\tsettingController: function(action, type){\r\n\t\t\t\t// removes white spaces\r\n\t\t\t\ttype = type.replace(/\\s/g, '');\r\n\t\t\t\treturn action + type + 'DialogController';\r\n\t\t\t},\r\n\t\t\tsettingDialogTemplate: function(action, type){\r\n\t\t\t\tif(type == 'Designers' || type == 'Quality Control'){\r\n\t\t\t\t\treturn action + '-users-dialog.template.html';\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// replaces white spaces with dashes and lower cases all captial letters\r\n\t\t\t\ttype = type.replace(/\\s+/g, '-').toLowerCase();\r\n\r\n\t\t\t\treturn action + '-' + type + '-dialog.template.html';\r\n\t\t\t},\r\n\t\t\tfabCreateSuccessMessage: function(type){\r\n\t\t\t\tif(type == 'Categories'){\r\n\t\t\t\t\tvar message = 'A new category has been added.'\r\n\t\t\t\t}\r\n\t\t\t\telse if(type == 'Clients'){\r\n\t\t\t\t\tvar message = 'A new client has been added.'\r\n\t\t\t\t}\r\n\t\t\t\telse if(type == 'Designers'){\r\n\t\t\t\t\tvar message = 'A new designer has been added to your team.'\r\n\t\t\t\t}\r\n\t\t\t\telse if(type == 'Quality Control'){\r\n\t\t\t\t\tvar message = 'A new quality control has been added to your team.'\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn $mdToast.show(\r\n\t\t\t    \t$mdToast.simple()\r\n\t\t\t\t        .textContent(message)\r\n\t\t\t\t        .position('bottom right')\r\n\t\t\t\t        .hideDelay(3000)\r\n\t\t\t    );\r\n\t\t\t},\r\n\t\t\tdelete: function(type, item){\r\n\t\t\t\tvar urlBase = type == 'Categories' ? 'category' : 'client';\r\n\r\n\t\t\t\treturn $http.delete(urlBase + '/' + item.id);\r\n\t\t\t}\r\n\t\t}\r\n\t}]);"],"sourceRoot":"/source/"}